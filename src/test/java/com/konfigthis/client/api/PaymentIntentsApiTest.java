/*
 * dots api
 * Scalable and Flexible Payouts Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@dots.dev
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PaymentIntent;
import com.konfigthis.client.model.PaymentintentsConfirmIntentRequest;
import com.konfigthis.client.model.PaymentintentsCreateIntentRequest;
import com.konfigthis.client.model.PaymentintentsCreateIntentRequestTransferData;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentIntentsApi
 */
@Disabled
public class PaymentIntentsApiTest {

    private static PaymentIntentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PaymentIntentsApi(apiClient);
    }

    /**
     * Confirm a Payment Intent
     *
     * Confirm a payment intent that has not been confirmed yet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void confirmIntentTest() throws ApiException {
        String paymentMethodId = null;
        String paymentIntentId = null;
        PaymentIntent response = api.confirmIntent(paymentMethodId, paymentIntentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a Payment Intent
     *
     * Create a Payment Intent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createIntentTest() throws ApiException {
        Integer amount = null;
        String currency = null;
        String description = null;
        Boolean confirm = null;
        UUID userId = null;
        UUID customerId = null;
        UUID paymentMethodId = null;
        List<String> paymentMethodTypes = null;
        String setupFutureUsage = null;
        Boolean metadata = null;
        PaymentintentsCreateIntentRequestTransferData transferData = null;
        Integer applicationFeeAmount = null;
        PaymentIntent response = api.createIntent(amount, currency)
                .description(description)
                .confirm(confirm)
                .userId(userId)
                .customerId(customerId)
                .paymentMethodId(paymentMethodId)
                .paymentMethodTypes(paymentMethodTypes)
                .setupFutureUsage(setupFutureUsage)
                .metadata(metadata)
                .transferData(transferData)
                .applicationFeeAmount(applicationFeeAmount)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a Payment Intent
     *
     * Retrieve a payment intent by its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String paymentIntentId = null;
        PaymentIntent response = api.getById(paymentIntentId)
                .execute();
        // TODO: test validations
    }

    /**
     * List all Payment Intents
     *
     * Get all payment intents
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllTest() throws ApiException {
        List<PaymentIntent> response = api.listAll()
                .execute();
        // TODO: test validations
    }

}
