/*
 * dots api
 * Scalable and Flexible Payouts Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@dots.dev
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.TransferbatchesCreateBatchRequest;
import com.konfigthis.client.model.TransferbatchesCreateBatchRequestItemsInner;
import com.konfigthis.client.model.TransferbatchesCreateBatchResponse;
import com.konfigthis.client.model.TransferbatchesGetByIdResponse;
import com.konfigthis.client.model.TransferbatchesListAllResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransferBatchesApi
 */
@Disabled
public class TransferBatchesApiTest {

    private static TransferBatchesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TransferBatchesApi(apiClient);
    }

    /**
     * Create a Transfer Batch
     *
     * Create a transfer batch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBatchTest() throws ApiException {
        List<TransferbatchesCreateBatchRequestItemsInner> items = null;
        UUID idempotencyKey = null;
        Object metadata = null;
        TransferbatchesCreateBatchResponse response = api.createBatch()
                .items(items)
                .idempotencyKey(idempotencyKey)
                .metadata(metadata)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a Transfer Batch
     *
     * Get a transfer batch by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String transferBatchId = null;
        TransferbatchesGetByIdResponse response = api.getById(transferBatchId)
                .execute();
        // TODO: test validations
    }

    /**
     * List all Transfer Batches
     *
     * Get a transfer batch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllTest() throws ApiException {
        String limit = null;
        String startingAfter = null;
        String endingBefore = null;
        TransferbatchesListAllResponse response = api.listAll()
                .limit(limit)
                .startingAfter(startingAfter)
                .endingBefore(endingBefore)
                .execute();
        // TODO: test validations
    }

}
