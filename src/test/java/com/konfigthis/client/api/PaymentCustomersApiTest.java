/*
 * dots api
 * Scalable and Flexible Payouts Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@dots.dev
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.PaymentCustomer;
import com.konfigthis.client.model.PaymentcustomersCreateCustomerResponse;
import com.konfigthis.client.model.PaymentcustomersListAllResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentCustomersApi
 */
@Disabled
public class PaymentCustomersApiTest {

    private static PaymentCustomersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PaymentCustomersApi(apiClient);
    }

    /**
     * Create a Payment Customer
     *
     * Create a Payment Customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCustomerTest() throws ApiException {
        UUID id = null;
        UUID userId = null;
        String email = null;
        String countryCode = null;
        String phoneNumber = null;
        String firstName = null;
        String middleName = null;
        String lastName = null;
        Object metadata = null;
        OffsetDateTime created = null;
        OffsetDateTime updated = null;
        PaymentcustomersCreateCustomerResponse response = api.createCustomer()
                .id(id)
                .userId(userId)
                .email(email)
                .countryCode(countryCode)
                .phoneNumber(phoneNumber)
                .firstName(firstName)
                .middleName(middleName)
                .lastName(lastName)
                .metadata(metadata)
                .created(created)
                .updated(updated)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a Payment Customer
     *
     * Get a payment customer by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String paymentCustomerId = null;
        PaymentCustomer response = api.getById(paymentCustomerId)
                .execute();
        // TODO: test validations
    }

    /**
     * List all Payment Customers
     *
     * List all payment customers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllTest() throws ApiException {
        String limit = null;
        String startingAfter = null;
        String endingBefore = null;
        PaymentcustomersListAllResponse response = api.listAll()
                .limit(limit)
                .startingAfter(startingAfter)
                .endingBefore(endingBefore)
                .execute();
        // TODO: test validations
    }

}
