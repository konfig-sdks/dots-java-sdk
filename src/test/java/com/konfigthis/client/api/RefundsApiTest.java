/*
 * dots api
 * Scalable and Flexible Payouts Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@dots.dev
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Refund;
import com.konfigthis.client.model.RefundsCreateRefundRequest;
import com.konfigthis.client.model.RefundsGetAllResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RefundsApi
 */
@Disabled
public class RefundsApiTest {

    private static RefundsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new RefundsApi(apiClient);
    }

    /**
     * Create a Refund
     *
     * Create a Refund
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRefundTest() throws ApiException {
        Integer amount = null;
        UUID paymentIntentId = null;
        String reason = null;
        Boolean metadata = null;
        Refund response = api.createRefund(amount, paymentIntentId)
                .reason(reason)
                .metadata(metadata)
                .execute();
        // TODO: test validations
    }

    /**
     * List all Refunds
     *
     * List all refunds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTest() throws ApiException {
        String limit = null;
        String startingAfter = null;
        String endingBefore = null;
        RefundsGetAllResponse response = api.getAll()
                .limit(limit)
                .startingAfter(startingAfter)
                .endingBefore(endingBefore)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a Refund
     *
     * Retreieve a refund by its ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String refundId = null;
        Refund response = api.getById(refundId)
                .execute();
        // TODO: test validations
    }

}
