/*
 * dots api
 * Scalable and Flexible Payouts Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@dots.dev
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PayoutLink;
import com.konfigthis.client.model.PayoutlinksCreatePayoutLinkRequest;
import com.konfigthis.client.model.PayoutlinksCreatePayoutLinkRequestDelivery;
import com.konfigthis.client.model.PayoutlinksCreatePayoutLinkRequestPayee;
import com.konfigthis.client.model.PayoutlinksListAllResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PayoutLinksApi
 */
@Disabled
public class PayoutLinksApiTest {

    private static PayoutLinksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PayoutLinksApi(apiClient);
    }

    /**
     * Delete a Payout Link
     *
     * Cancel a payout link
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelLinkTest() throws ApiException {
        String payoutLinkId = null;
        PayoutLink response = api.cancelLink(payoutLinkId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a Payout Link
     *
     * Create a Payout Link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPayoutLinkTest() throws ApiException {
        Integer amount = null;
        UUID userId = null;
        PayoutlinksCreatePayoutLinkRequestPayee payee = null;
        PayoutlinksCreatePayoutLinkRequestDelivery delivery = null;
        Boolean forceCollectComplianceInformation = null;
        Boolean taxExempt = null;
        Object metadata = null;
        String memo = null;
        Object idempotencyKey = null;
        UUID payoutFeeParty = null;
        List<String> additionalSteps = null;
        PayoutLink response = api.createPayoutLink(amount)
                .userId(userId)
                .payee(payee)
                .delivery(delivery)
                .forceCollectComplianceInformation(forceCollectComplianceInformation)
                .taxExempt(taxExempt)
                .metadata(metadata)
                .memo(memo)
                .idempotencyKey(idempotencyKey)
                .payoutFeeParty(payoutFeeParty)
                .additionalSteps(additionalSteps)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a Payout Link
     *
     * Get a payout link by its id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPayoutLinkTest() throws ApiException {
        String payoutLinkId = null;
        PayoutLink response = api.getPayoutLink(payoutLinkId)
                .execute();
        // TODO: test validations
    }

    /**
     * List all Payout Links
     *
     * List all created Payout Links.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllTest() throws ApiException {
        Integer limit = null;
        UUID startingAfter = null;
        UUID endingBefore = null;
        PayoutlinksListAllResponse response = api.listAll()
                .limit(limit)
                .startingAfter(startingAfter)
                .endingBefore(endingBefore)
                .execute();
        // TODO: test validations
    }

}
