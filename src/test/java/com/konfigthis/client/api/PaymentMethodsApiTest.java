/*
 * dots api
 * Scalable and Flexible Payouts Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@dots.dev
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PaymentMethod;
import com.konfigthis.client.model.PaymentmethodsAttachPaymentMethodRequest;
import com.konfigthis.client.model.PaymentmethodsDetachPaymentMethodRequest;
import com.konfigthis.client.model.PaymentmethodsListAllPaymentCustomerResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentMethodsApi
 */
@Disabled
public class PaymentMethodsApiTest {

    private static PaymentMethodsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PaymentMethodsApi(apiClient);
    }

    /**
     * Attach a Payment Method to a Payment Customer
     *
     * Attach a payment method to a payment customer for future usage.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attachPaymentMethodTest() throws ApiException {
        String customerId = null;
        String paymentMethodId = null;
        PaymentMethod response = api.attachPaymentMethod(customerId, paymentMethodId)
                .execute();
        // TODO: test validations
    }

    /**
     * Detach Payment Method from a Payment Customer
     *
     * Detach a payment method from a payment customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void detachPaymentMethodTest() throws ApiException {
        String paymentMethodId = null;
        String customerId = null;
        PaymentMethod response = api.detachPaymentMethod(paymentMethodId)
                .customerId(customerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a Payment Method
     *
     * Get a payment method by its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String paymentMethodId = null;
        PaymentMethod response = api.getById(paymentMethodId)
                .execute();
        // TODO: test validations
    }

    /**
     * List all Payment Methods for a Payment Customer
     *
     * Get the payment methods for a payment customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllPaymentCustomerTest() throws ApiException {
        String customerId = null;
        Double limit = null;
        PaymentmethodsListAllPaymentCustomerResponse response = api.listAllPaymentCustomer()
                .customerId(customerId)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

}
