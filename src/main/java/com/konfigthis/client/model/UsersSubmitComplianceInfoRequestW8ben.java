/*
 * dots api
 * Scalable and Flexible Payouts Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@dots.dev
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.UsersSubmitComplianceInfoRequestW8benAddress;
import com.konfigthis.client.model.UsersSubmitComplianceInfoRequestW8benSignature;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * W8-BEN form for foreign payees.
 */
@ApiModel(description = "W8-BEN form for foreign payees.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UsersSubmitComplianceInfoRequestW8ben {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CITIZENSHIP_COUNTRY = "citizenship_country";
  @SerializedName(SERIALIZED_NAME_CITIZENSHIP_COUNTRY)
  private String citizenshipCountry;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "date_of_birth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private LocalDate dateOfBirth;

  public static final String SERIALIZED_NAME_TIN = "tin";
  @SerializedName(SERIALIZED_NAME_TIN)
  private String tin;

  public static final String SERIALIZED_NAME_FOREIGN_TAX_ID = "foreign_tax_id";
  @SerializedName(SERIALIZED_NAME_FOREIGN_TAX_ID)
  private String foreignTaxId;

  public static final String SERIALIZED_NAME_TAX_TREATY_COUNTRY = "tax_treaty_country";
  @SerializedName(SERIALIZED_NAME_TAX_TREATY_COUNTRY)
  private String taxTreatyCountry;

  public static final String SERIALIZED_NAME_TAX_TREATY_CITATION = "tax_treaty_citation";
  @SerializedName(SERIALIZED_NAME_TAX_TREATY_CITATION)
  private String taxTreatyCitation;

  public static final String SERIALIZED_NAME_TAX_TREATY_RATE = "tax_treaty_rate";
  @SerializedName(SERIALIZED_NAME_TAX_TREATY_RATE)
  private Double taxTreatyRate;

  /**
   * The type of income for tax treaty purposes. Valid values are - interest1 (Interest Paid by U.S. Obligors) - dividend6 (Dividends Paid by U.S. Corporations) - dividend7 (Dividends Qualifying for Direct Dividend Rate) - pension15 (Pensions and Annuities) - socialSecurity (Social Security) - equipment10 (Industrial Equipment) - knowhow10 (Know-How/Other Industrial Royalties) - patent10 (Patents) - film11 (Film &amp; TV) - copyright12 (Copyrights)
   */
  @JsonAdapter(TaxTreatyIncomeTypeEnum.Adapter.class)
 public enum TaxTreatyIncomeTypeEnum {
    INTEREST1("interest1"),
    
    DIVIDEND6("dividend6"),
    
    DIVIDEND7("dividend7"),
    
    PENSION15("pension15"),
    
    SOCIALSECURITY("socialSecurity"),
    
    EQUIPMENT10("equipment10"),
    
    KNOWHOW10("knowhow10"),
    
    PATENT10("patent10"),
    
    FILM11("film11"),
    
    COPYRIGHT12("copyright12");

    private String value;

    TaxTreatyIncomeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TaxTreatyIncomeTypeEnum fromValue(String value) {
      for (TaxTreatyIncomeTypeEnum b : TaxTreatyIncomeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TaxTreatyIncomeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TaxTreatyIncomeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TaxTreatyIncomeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TaxTreatyIncomeTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TAX_TREATY_INCOME_TYPE = "tax_treaty_income_type";
  @SerializedName(SERIALIZED_NAME_TAX_TREATY_INCOME_TYPE)
  private TaxTreatyIncomeTypeEnum taxTreatyIncomeType;

  public static final String SERIALIZED_NAME_TAX_TREATY_EXPLANATION = "tax_treaty_explanation";
  @SerializedName(SERIALIZED_NAME_TAX_TREATY_EXPLANATION)
  private String taxTreatyExplanation;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private UsersSubmitComplianceInfoRequestW8benAddress address;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private UsersSubmitComplianceInfoRequestW8benSignature signature;

  public UsersSubmitComplianceInfoRequestW8ben() {
  }

  public UsersSubmitComplianceInfoRequestW8ben name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Full name of the person.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Full name of the person.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public UsersSubmitComplianceInfoRequestW8ben citizenshipCountry(String citizenshipCountry) {
    
    
    
    
    this.citizenshipCountry = citizenshipCountry;
    return this;
  }

   /**
   * The two-letter ISO country code associated with the beneficial owner&#39;s citizenship.
   * @return citizenshipCountry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The two-letter ISO country code associated with the beneficial owner's citizenship.")

  public String getCitizenshipCountry() {
    return citizenshipCountry;
  }


  public void setCitizenshipCountry(String citizenshipCountry) {
    
    
    
    this.citizenshipCountry = citizenshipCountry;
  }


  public UsersSubmitComplianceInfoRequestW8ben dateOfBirth(LocalDate dateOfBirth) {
    
    
    
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Date of birth of the user.
   * @return dateOfBirth
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Date of birth of the user.")

  public LocalDate getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(LocalDate dateOfBirth) {
    
    
    
    this.dateOfBirth = dateOfBirth;
  }


  public UsersSubmitComplianceInfoRequestW8ben tin(String tin) {
    
    
    if (tin != null && tin.length() < 9) {
      throw new IllegalArgumentException("Invalid value for tin. Length must be greater than or equal to 9.");
    }
    
    this.tin = tin;
    return this;
  }

   /**
   * SSN
   * @return tin
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "SSN")

  public String getTin() {
    return tin;
  }


  public void setTin(String tin) {
    
    
    if (tin != null && tin.length() < 9) {
      throw new IllegalArgumentException("Invalid value for tin. Length must be greater than or equal to 9.");
    }
    this.tin = tin;
  }


  public UsersSubmitComplianceInfoRequestW8ben foreignTaxId(String foreignTaxId) {
    
    
    
    
    this.foreignTaxId = foreignTaxId;
    return this;
  }

   /**
   * The tax identification number associated with the beneficial owner&#39;s country of residence.
   * @return foreignTaxId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tax identification number associated with the beneficial owner's country of residence.")

  public String getForeignTaxId() {
    return foreignTaxId;
  }


  public void setForeignTaxId(String foreignTaxId) {
    
    
    
    this.foreignTaxId = foreignTaxId;
  }


  public UsersSubmitComplianceInfoRequestW8ben taxTreatyCountry(String taxTreatyCountry) {
    
    
    
    
    this.taxTreatyCountry = taxTreatyCountry;
    return this;
  }

   /**
   * The two-letter ISO country code of the country for tax treaty purposes.
   * @return taxTreatyCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The two-letter ISO country code of the country for tax treaty purposes.")

  public String getTaxTreatyCountry() {
    return taxTreatyCountry;
  }


  public void setTaxTreatyCountry(String taxTreatyCountry) {
    
    
    
    this.taxTreatyCountry = taxTreatyCountry;
  }


  public UsersSubmitComplianceInfoRequestW8ben taxTreatyCitation(String taxTreatyCitation) {
    
    
    
    
    this.taxTreatyCitation = taxTreatyCitation;
    return this;
  }

   /**
   * The article and paragraph of the citation claimed for tax treaty purposes.
   * @return taxTreatyCitation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The article and paragraph of the citation claimed for tax treaty purposes.")

  public String getTaxTreatyCitation() {
    return taxTreatyCitation;
  }


  public void setTaxTreatyCitation(String taxTreatyCitation) {
    
    
    
    this.taxTreatyCitation = taxTreatyCitation;
  }


  public UsersSubmitComplianceInfoRequestW8ben taxTreatyRate(Double taxTreatyRate) {
    
    
    
    
    this.taxTreatyRate = taxTreatyRate;
    return this;
  }

  public UsersSubmitComplianceInfoRequestW8ben taxTreatyRate(Integer taxTreatyRate) {
    
    
    
    
    this.taxTreatyRate = taxTreatyRate.doubleValue();
    return this;
  }

   /**
   * The withholding rate claimed for tax treaty purposes. For example, a 15% rate would be represented as 0.15.
   * @return taxTreatyRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The withholding rate claimed for tax treaty purposes. For example, a 15% rate would be represented as 0.15.")

  public Double getTaxTreatyRate() {
    return taxTreatyRate;
  }


  public void setTaxTreatyRate(Double taxTreatyRate) {
    
    
    
    this.taxTreatyRate = taxTreatyRate;
  }


  public UsersSubmitComplianceInfoRequestW8ben taxTreatyIncomeType(TaxTreatyIncomeTypeEnum taxTreatyIncomeType) {
    
    
    
    
    this.taxTreatyIncomeType = taxTreatyIncomeType;
    return this;
  }

   /**
   * The type of income for tax treaty purposes. Valid values are - interest1 (Interest Paid by U.S. Obligors) - dividend6 (Dividends Paid by U.S. Corporations) - dividend7 (Dividends Qualifying for Direct Dividend Rate) - pension15 (Pensions and Annuities) - socialSecurity (Social Security) - equipment10 (Industrial Equipment) - knowhow10 (Know-How/Other Industrial Royalties) - patent10 (Patents) - film11 (Film &amp; TV) - copyright12 (Copyrights)
   * @return taxTreatyIncomeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of income for tax treaty purposes. Valid values are - interest1 (Interest Paid by U.S. Obligors) - dividend6 (Dividends Paid by U.S. Corporations) - dividend7 (Dividends Qualifying for Direct Dividend Rate) - pension15 (Pensions and Annuities) - socialSecurity (Social Security) - equipment10 (Industrial Equipment) - knowhow10 (Know-How/Other Industrial Royalties) - patent10 (Patents) - film11 (Film & TV) - copyright12 (Copyrights)")

  public TaxTreatyIncomeTypeEnum getTaxTreatyIncomeType() {
    return taxTreatyIncomeType;
  }


  public void setTaxTreatyIncomeType(TaxTreatyIncomeTypeEnum taxTreatyIncomeType) {
    
    
    
    this.taxTreatyIncomeType = taxTreatyIncomeType;
  }


  public UsersSubmitComplianceInfoRequestW8ben taxTreatyExplanation(String taxTreatyExplanation) {
    
    
    
    
    this.taxTreatyExplanation = taxTreatyExplanation;
    return this;
  }

   /**
   * An optional explanation for the tax treaty claimed.
   * @return taxTreatyExplanation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional explanation for the tax treaty claimed.")

  public String getTaxTreatyExplanation() {
    return taxTreatyExplanation;
  }


  public void setTaxTreatyExplanation(String taxTreatyExplanation) {
    
    
    
    this.taxTreatyExplanation = taxTreatyExplanation;
  }


  public UsersSubmitComplianceInfoRequestW8ben address(UsersSubmitComplianceInfoRequestW8benAddress address) {
    
    
    
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UsersSubmitComplianceInfoRequestW8benAddress getAddress() {
    return address;
  }


  public void setAddress(UsersSubmitComplianceInfoRequestW8benAddress address) {
    
    
    
    this.address = address;
  }


  public UsersSubmitComplianceInfoRequestW8ben signature(UsersSubmitComplianceInfoRequestW8benSignature signature) {
    
    
    
    
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UsersSubmitComplianceInfoRequestW8benSignature getSignature() {
    return signature;
  }


  public void setSignature(UsersSubmitComplianceInfoRequestW8benSignature signature) {
    
    
    
    this.signature = signature;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UsersSubmitComplianceInfoRequestW8ben instance itself
   */
  public UsersSubmitComplianceInfoRequestW8ben putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersSubmitComplianceInfoRequestW8ben usersSubmitComplianceInfoRequestW8ben = (UsersSubmitComplianceInfoRequestW8ben) o;
    return Objects.equals(this.name, usersSubmitComplianceInfoRequestW8ben.name) &&
        Objects.equals(this.citizenshipCountry, usersSubmitComplianceInfoRequestW8ben.citizenshipCountry) &&
        Objects.equals(this.dateOfBirth, usersSubmitComplianceInfoRequestW8ben.dateOfBirth) &&
        Objects.equals(this.tin, usersSubmitComplianceInfoRequestW8ben.tin) &&
        Objects.equals(this.foreignTaxId, usersSubmitComplianceInfoRequestW8ben.foreignTaxId) &&
        Objects.equals(this.taxTreatyCountry, usersSubmitComplianceInfoRequestW8ben.taxTreatyCountry) &&
        Objects.equals(this.taxTreatyCitation, usersSubmitComplianceInfoRequestW8ben.taxTreatyCitation) &&
        Objects.equals(this.taxTreatyRate, usersSubmitComplianceInfoRequestW8ben.taxTreatyRate) &&
        Objects.equals(this.taxTreatyIncomeType, usersSubmitComplianceInfoRequestW8ben.taxTreatyIncomeType) &&
        Objects.equals(this.taxTreatyExplanation, usersSubmitComplianceInfoRequestW8ben.taxTreatyExplanation) &&
        Objects.equals(this.address, usersSubmitComplianceInfoRequestW8ben.address) &&
        Objects.equals(this.signature, usersSubmitComplianceInfoRequestW8ben.signature)&&
        Objects.equals(this.additionalProperties, usersSubmitComplianceInfoRequestW8ben.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, citizenshipCountry, dateOfBirth, tin, foreignTaxId, taxTreatyCountry, taxTreatyCitation, taxTreatyRate, taxTreatyIncomeType, taxTreatyExplanation, address, signature, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersSubmitComplianceInfoRequestW8ben {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    citizenshipCountry: ").append(toIndentedString(citizenshipCountry)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    tin: ").append(toIndentedString(tin)).append("\n");
    sb.append("    foreignTaxId: ").append(toIndentedString(foreignTaxId)).append("\n");
    sb.append("    taxTreatyCountry: ").append(toIndentedString(taxTreatyCountry)).append("\n");
    sb.append("    taxTreatyCitation: ").append(toIndentedString(taxTreatyCitation)).append("\n");
    sb.append("    taxTreatyRate: ").append(toIndentedString(taxTreatyRate)).append("\n");
    sb.append("    taxTreatyIncomeType: ").append(toIndentedString(taxTreatyIncomeType)).append("\n");
    sb.append("    taxTreatyExplanation: ").append(toIndentedString(taxTreatyExplanation)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("citizenship_country");
    openapiFields.add("date_of_birth");
    openapiFields.add("tin");
    openapiFields.add("foreign_tax_id");
    openapiFields.add("tax_treaty_country");
    openapiFields.add("tax_treaty_citation");
    openapiFields.add("tax_treaty_rate");
    openapiFields.add("tax_treaty_income_type");
    openapiFields.add("tax_treaty_explanation");
    openapiFields.add("address");
    openapiFields.add("signature");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("citizenship_country");
    openapiRequiredFields.add("date_of_birth");
    openapiRequiredFields.add("tin");
    openapiRequiredFields.add("address");
    openapiRequiredFields.add("signature");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UsersSubmitComplianceInfoRequestW8ben
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UsersSubmitComplianceInfoRequestW8ben.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsersSubmitComplianceInfoRequestW8ben is not found in the empty JSON string", UsersSubmitComplianceInfoRequestW8ben.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UsersSubmitComplianceInfoRequestW8ben.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("citizenship_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `citizenship_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("citizenship_country").toString()));
      }
      if (!jsonObj.get("tin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tin").toString()));
      }
      if ((jsonObj.get("foreign_tax_id") != null && !jsonObj.get("foreign_tax_id").isJsonNull()) && !jsonObj.get("foreign_tax_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `foreign_tax_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("foreign_tax_id").toString()));
      }
      if ((jsonObj.get("tax_treaty_country") != null && !jsonObj.get("tax_treaty_country").isJsonNull()) && !jsonObj.get("tax_treaty_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_treaty_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_treaty_country").toString()));
      }
      if ((jsonObj.get("tax_treaty_citation") != null && !jsonObj.get("tax_treaty_citation").isJsonNull()) && !jsonObj.get("tax_treaty_citation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_treaty_citation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_treaty_citation").toString()));
      }
      if ((jsonObj.get("tax_treaty_income_type") != null && !jsonObj.get("tax_treaty_income_type").isJsonNull()) && !jsonObj.get("tax_treaty_income_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_treaty_income_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_treaty_income_type").toString()));
      }
      if ((jsonObj.get("tax_treaty_explanation") != null && !jsonObj.get("tax_treaty_explanation").isJsonNull()) && !jsonObj.get("tax_treaty_explanation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_treaty_explanation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_treaty_explanation").toString()));
      }
      // validate the required field `address`
      UsersSubmitComplianceInfoRequestW8benAddress.validateJsonObject(jsonObj.getAsJsonObject("address"));
      // validate the required field `signature`
      UsersSubmitComplianceInfoRequestW8benSignature.validateJsonObject(jsonObj.getAsJsonObject("signature"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UsersSubmitComplianceInfoRequestW8ben.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UsersSubmitComplianceInfoRequestW8ben' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UsersSubmitComplianceInfoRequestW8ben> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UsersSubmitComplianceInfoRequestW8ben.class));

       return (TypeAdapter<T>) new TypeAdapter<UsersSubmitComplianceInfoRequestW8ben>() {
           @Override
           public void write(JsonWriter out, UsersSubmitComplianceInfoRequestW8ben value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UsersSubmitComplianceInfoRequestW8ben read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UsersSubmitComplianceInfoRequestW8ben instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UsersSubmitComplianceInfoRequestW8ben given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UsersSubmitComplianceInfoRequestW8ben
  * @throws IOException if the JSON string is invalid with respect to UsersSubmitComplianceInfoRequestW8ben
  */
  public static UsersSubmitComplianceInfoRequestW8ben fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsersSubmitComplianceInfoRequestW8ben.class);
  }

 /**
  * Convert an instance of UsersSubmitComplianceInfoRequestW8ben to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

