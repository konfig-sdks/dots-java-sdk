openapi: 3.0.3
info:
  contact:
    email: info@dots.dev
    name: Kartikye Mittal
    url: https://dots.dev
  description: Scalable and Flexible Payouts Infrastructure
  license:
    name: MIT
    url: https://opensource.org/license/mit/
  title: dots api
  version: "1.0"
  x-konfig-ignore:
    object-with-no-properties: true
  x-konfig-has-globally-required-security: true
  x-konfig-uses-multipart-form-data: true
servers:
- description: Production
  url: https://api.dots.dev/api
security:
- api_key: []
tags:
- description: User routes
  name: users
- description: App Routes
  name: apps
- description: Transfer routes
  name: transfers
- description: Disputes Routes
  name: disputes
- description: Payment Intent Routes
  name: payment-intents
- description: Payment Method Routes
  name: payment-methods
- description: Payout Link Routes
  name: payout-links
- description: Checkout Session Routes
  name: checkout-sessions
- description: Flow routes
  name: flows
- description: Payment Customer Routes
  name: payment-customers
- description: Payout Request Routes
  name: payout-requests
- description: Refund Routes
  name: refunds
- description: Transfer Batch routes
  name: transfer-batches
- description: Payout Routes
  name: payouts
- description: Transaction Routes
  name: transactions
- description: Payment Routes
  name: payments
paths:
  /v2/users:
    get:
      description: List all users connected to your application.
      operationId: Users_listAllUsers
      parameters:
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListAllUsersResponse'
          description: OK
      summary: List all Users
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-users
      x-accepts: application/json
    post:
      description: Create a user.
      operationId: Users_createNewUser
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  first_name: Bob
                  last_name: Loblaw
                  email: bob@bobloblaw.com
                  country_code: "1"
                  phone_number: "4154332334"
                  metadata:
                    internal_id: user_121344
            schema:
              $ref: '#/components/schemas/UsersCreateNewUserRequest'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: OK
      summary: Create a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-users
      x-content-type: application/json
      x-accepts: application/json
  /v2/users/{user_id}:
    delete:
      description: Delete a user.
      operationId: Users_removeUser
      parameters:
      - description: Id of the user to fetch
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: OK
      summary: Delete a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v2-users-user_id
      x-accepts: application/json
    get:
      description: Get a user by their id.
      operationId: Users_getUserById
      parameters:
      - description: Id of the user to fetch
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: OK
      summary: Retrieve a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-users-user_id
      x-accepts: application/json
    patch:
      description: Update mutable fields of a user object.
      operationId: Users_updateUserObject
      parameters:
      - description: Id of the user to fetch
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersUpdateUserObjectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: OK
      summary: Update a user
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--v2-users-user_id
      x-content-type: application/json
      x-accepts: application/json
  /v2/users/{user_id}/compliance:
    put:
      description: Add Compliance information to a user.
      operationId: Users_submitComplianceInfo
      parameters:
      - description: Id of the user to fetch
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSubmitComplianceInfoRequest'
      responses:
        "200":
          description: OK
      summary: Submit Compliance Information
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v2-users-user_id-compliance
      x-content-type: application/json
      x-accepts: application/json
  /v2/users/{user_id}/send-verification-token:
    post:
      description: Send a user a verification token.
      operationId: Users_sendVerificationToken
      parameters:
      - description: Id of the user to fetch
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSendVerificationTokenRequest'
      responses:
        "202":
          description: Accepted
      summary: Send a Verification Token
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-users-user_id-send-verification-token
      x-content-type: application/json
      x-accepts: application/json
  /v2/users/{user_id}/verify:
    post:
      description: Verify a user with a token.
      operationId: Users_verifyUserToken
      parameters:
      - description: Id of the user to fetch
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersVerifyUserTokenRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Incorrect token
      summary: Verify a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-users-user_id-verify
      x-content-type: application/json
      x-accepts: application/json
  /v2/users/{user_id}/payout-methods:
    get:
      description: Get a user's connected payout methods.
      operationId: Users_listPayoutMethods
      parameters:
      - description: Id of the user to fetch
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListPayoutMethodsResponse'
          description: OK
      summary: List Payout Methods
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-users-user_id-payout-methods
      x-accepts: application/json
    put:
      description: "Add a payout method to the user. Payout method can be one of `paypal`,\
        \ `venmo`, `ach`, or `cash_app`. Each method has different required parameters."
      operationId: Users_addPayoutMethod
      parameters:
      - description: Id of the user to fetch
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Bank Account:
                value:
                  platform: ach
                  routing_number: "123456789"
                  account_number: "123456789"
                  account_type: checking
              PayPal:
                value:
                  platform: paypal
                  email: bob.loblaw@gmail.com
              Venmo:
                value:
                  platform: venmo
                  phone_number: "4158934432"
              Cash App:
                value:
                  platform: cash_app
                  routing_number: "123456789"
                  account_number: "123456789"
                  cash_tag: $cash_tag
            schema:
              $ref: '#/components/schemas/UsersAddPayoutMethodRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment-method'
          description: OK
      summary: Add a Payout Method
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v2-users-user_id-payout-methods
      x-content-type: application/json
      x-accepts: application/json
  /v2/transfers:
    get:
      description: List all transfers.
      operationId: Transfers_listAll
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Include only results with this user ID attached.
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransfersListAllResponse'
          description: OK
      summary: List all Transfers
      tags:
      - transfers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-transfers
      x-accepts: application/json
    post:
      description: Create a transfer.
      operationId: Transfers_createTransfer
      requestBody:
        content:
          application/json:
            examples:
              Send Funds to User:
                value:
                  amount: -1000
                  user_id: a169451c-8525-4352-b8ca-070dd449a1a5
              Debi Funds from User:
                value:
                  amount: -1000
                  user_id: a169451c-8525-4352-b8ca-070dd449a1a5
            schema:
              $ref: '#/components/schemas/TransfersCreateTransferRequest'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transfer'
          description: OK
      summary: Create a Transfer
      tags:
      - transfers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-transfers
      x-content-type: application/json
      x-accepts: application/json
  /v2/transfers/{transfer_id}:
    get:
      description: Get a transfer by its id.
      operationId: Transfers_getById
      parameters:
      - description: Id of the transfer to fetch
        explode: false
        in: path
        name: transfer_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transfer'
          description: OK
      summary: Get a Transfer
      tags:
      - transfers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-transfers-transfer_id
      x-accepts: application/json
  /v2/flows:
    get:
      description: List all Flows.
      operationId: Flows_listAll
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowsListAllResponse'
          description: OK
      summary: List all Flows
      tags:
      - flows
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-flows
      x-accepts: application/json
    post:
      description: Create a new Flow.
      operationId: Flows_createNewFlow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowsCreateNewFlowRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flow'
          description: OK
      summary: Create a Flow
      tags:
      - flows
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-flows
      x-content-type: application/json
      x-accepts: application/json
  /v2/flows/{flow_id}:
    get:
      description: Get a Flow by its id.
      operationId: Flows_getById
      parameters:
      - description: Id of the flow to fetch
        explode: false
        in: path
        name: flow_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flow'
          description: OK
      summary: Retrieve a Flow
      tags:
      - flows
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-flows-flow_id
      x-accepts: application/json
  /v2/payout-links:
    get:
      description: List all created Payout Links.
      operationId: Payoutlinks_listAll
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutlinksListAllResponse'
          description: OK
      summary: List all Payout Links
      tags:
      - payout-links
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-payout-links
      x-accepts: application/json
    post:
      description: Create a Payout Link.
      operationId: Payoutlinks_createPayoutLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutlinksCreatePayoutLinkRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payout-link'
          description: OK
      summary: Create a Payout Link
      tags:
      - payout-links
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-payout-links
      x-content-type: application/json
      x-accepts: application/json
  /v2/payout-links/{payout_link_id}:
    delete:
      description: Cancel a payout link
      operationId: Payoutlinks_cancelLink
      parameters:
      - description: Id of the payout link
        explode: false
        in: path
        name: payout_link_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payout-link'
          description: OK
      summary: Delete a Payout Link
      tags:
      - payout-links
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v2-payout-links-payout_link_id
      x-accepts: application/json
    get:
      description: Get a payout link by its id.
      operationId: Payoutlinks_getPayoutLink
      parameters:
      - description: Id of the payout link
        explode: false
        in: path
        name: payout_link_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payout-link'
          description: OK
      summary: Retrieve a Payout Link
      tags:
      - payout-links
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-payout-links-payout_link_id
      x-accepts: application/json
  /v2/payouts:
    post:
      description: Create a payout for an existing user that has a payout method saved
        to their account.
      operationId: Payouts_createPayout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutsCreatePayoutRequest'
        description: ""
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transfer'
          description: Created
      summary: Create a Payout
      tags:
      - payouts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-payouts
      x-content-type: application/json
      x-accepts: application/json
  /v2/payments:
    post:
      description: "Creates a transaction from a user or a payment customer to the\
        \ app. User the `/users/{user_id}/payout-methods` route to get a user's stored\
        \ payment methods."
      operationId: Payments_createTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsCreateTransactionRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transfer'
          description: Created
      summary: Create a Payment
      tags:
      - payments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-payments
      x-content-type: application/json
      x-accepts: application/json
  /v2/payouts/send-payout:
    post:
      description: "Send a payout to a person when you know their phone number or\
        \ user id. If the user has a Dots acconut, the funds will delivered according\
        \ to their saved prefernces. Otherwise, they will be sent a Payout Link to\
        \ onboard and recieve funds."
      operationId: Payouts_sendPayout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutsSendPayoutRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payout-link'
          description: Created
      summary: Send a Payout
      tags:
      - payouts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-payouts-send-payout
      x-content-type: application/json
      x-accepts: application/json
  /v2/payout-requests:
    get:
      description: List all payout requests.
      operationId: Payoutrequests_getAllPayouts
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutrequestsGetAllPayoutsResponse'
          description: OK
      summary: List all Payout Requests
      tags:
      - payout-requests
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-payout-requests
      x-accepts: application/json
    post:
      description: "Submit a payout request from a person when you know their phone\
        \ number or user id. Once the payout request is approved, they will be sent\
        \ a Payout Link to onboard and recieve funds."
      operationId: Payoutrequests_submitRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutrequestsSubmitRequestRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payout-request'
          description: Created
      summary: Create a Payout Request
      tags:
      - payout-requests
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-payout-requests
      x-content-type: application/json
      x-accepts: application/json
  /v2/payout-requests/{payout_request_id}:
    get:
      description: Get a payout request by its id.
      operationId: Payoutrequests_getPayoutById
      parameters:
      - description: Id of the payout request
        explode: false
        in: path
        name: payout_request_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payout-request'
          description: OK
      summary: Retrieve a Payout Request
      tags:
      - payout-requests
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-payout-requests-payout_request_id
      x-accepts: application/json
  /v2/transactions:
    get:
      description: List all transactions.
      operationId: Transactions_listAll
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsListAllResponse'
          description: OK
      summary: List all Transactions
      tags:
      - transactions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-transactions
      x-accepts: application/json
  /v2/transactions/{transaction_id}:
    get:
      description: Get a transaction by its id.
      operationId: Transactions_getById
      parameters:
      - description: Id of the transaction
        explode: false
        in: path
        name: transaction_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
          description: OK
      summary: Retrieve a Transaction
      tags:
      - transactions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-transactions-transaction_id
      x-accepts: application/json
  /v2/payment-intents:
    get:
      description: Get all payment intents
      operationId: Paymentintents_listAll
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentintentsListAllResponse'
          description: OK
      summary: List all Payment Intents
      tags:
      - payment-intents
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-payment-intents
      x-accepts: application/json
    post:
      description: Create a Payment Intent
      operationId: Paymentintents_createIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentintentsCreateIntentRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment-intent'
          description: OK
      summary: Create a Payment Intent
      tags:
      - payment-intents
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-payment-intents
      x-content-type: application/json
      x-accepts: application/json
  /v2/payment-intents/{payment_intent_id}:
    get:
      description: Retrieve a payment intent by its ID.
      operationId: Paymentintents_getById
      parameters:
      - description: Payment Intent ID
        explode: false
        in: path
        name: payment_intent_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment-intent'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentintentsGetByIdResponse'
          description: Not Found
          x-do-not-generate: true
      summary: Retrieve a Payment Intent
      tags:
      - payment-intents
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-payment-intents-payment_intent_id
      x-accepts: application/json
  /v2/payment-intents/{payment_intent_id}/confirm:
    post:
      description: Confirm a payment intent that has not been confirmed yet.
      operationId: Paymentintents_confirmIntent
      parameters:
      - description: The ID if the Payment Intent to confirm.
        explode: false
        in: path
        name: payment_intent_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentintentsConfirmIntentRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment-intent'
          description: OK
      summary: Confirm a Payment Intent
      tags:
      - payment-intents
      x-stoplight:
        id: cui3559ytwoaa
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-payment-intents-payment_intent_id-confirm
      x-content-type: application/json
      x-accepts: application/json
  /v2/transfer-batches:
    get:
      description: Get a transfer batch
      operationId: Transferbatches_listAll
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferbatchesListAllResponse'
          description: OK
      summary: List all Transfer Batches
      tags:
      - transfer-batches
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-transfer-batches
      x-accepts: application/json
    post:
      description: Create a transfer batch
      operationId: Transferbatches_createBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferbatchesCreateBatchRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/TransferbatchesCreateBatchRequest1'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferbatchesCreateBatchResponse'
          description: OK
      summary: Create a Transfer Batch
      tags:
      - transfer-batches
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-transfer-batches
      x-content-type: application/json
      x-accepts: application/json
  /v2/transfer-batches/{transfer_batch_id}:
    get:
      description: Get a transfer batch by id
      operationId: Transferbatches_getById
      parameters:
      - description: Id of the transfer batch to fetch
        explode: false
        in: path
        name: transfer_batch_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferbatchesGetByIdResponse'
          description: OK
      summary: Retrieve a Transfer Batch
      tags:
      - transfer-batches
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-transfer-batches-transfer_batch_id
      x-accepts: application/json
  /v2/payment-customers:
    get:
      description: List all payment customers
      operationId: Paymentcustomers_listAll
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentcustomersListAllResponse'
          description: OK
      summary: List all Payment Customers
      tags:
      - payment-customers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-payment-customers
      x-accepts: application/json
    post:
      description: Create a Payment Customer
      operationId: Paymentcustomers_createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment-customer'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentcustomersCreateCustomerResponse'
          description: OK
      summary: Create a Payment Customer
      tags:
      - payment-customers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-payment-customers
      x-content-type: application/json
      x-accepts: application/json
  /v2/payment-customers/{payment_customer_id}:
    get:
      description: Get a payment customer by ID.
      operationId: Paymentcustomers_getById
      parameters:
      - description: The ID of the payment customer
        explode: false
        in: path
        name: payment_customer_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment-customer'
          description: OK
      summary: Retrieve a Payment Customer
      tags:
      - payment-customers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-payment-customers-payment_customer_id
      x-accepts: application/json
  /v2/checkout-sessions:
    get:
      description: List all checkout sessions
      operationId: Checkoutsessions_listAll
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutsessionsListAllResponse'
          description: OK
      summary: List all Checkout Sessions
      tags:
      - checkout-sessions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-checkout-sessions
      x-accepts: application/json
    post:
      description: Create a checkout session
      operationId: Checkoutsessions_createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutsessionsCreateSessionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout-session'
          description: OK
      summary: Create a Checkout Session
      tags:
      - checkout-sessions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-checkout-sessions
      x-content-type: application/json
      x-accepts: application/json
  /v2/checkout-sessions/{checkout_session_id}:
    get:
      description: Retrieve a checkout session by an ID
      operationId: Checkoutsessions_getById
      parameters:
      - description: ID of the checkout session to retrieve
        explode: false
        in: path
        name: checkout_session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout-session'
          description: OK
      summary: Retrieve a Checkout Session
      tags:
      - checkout-sessions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-checkout-sessions-checkout_session_id
      x-accepts: application/json
  /v2/apps:
    get:
      description: List all apps created by your organization
      operationId: Apps_listAll
      parameters:
      - description: Maximum number of results to retrieve
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: ID of first app to retrieve
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          format: UUID
          type: string
        style: form
      - description: ID of last app to retrieve
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          format: UUID
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsListAllResponse'
          description: OK
      summary: List all Apps
      tags:
      - apps
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-apps
      x-accepts: application/json
    post:
      description: Create an app in your organization
      operationId: Apps_createNewApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppsCreateNewAppRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app'
          description: Created
      summary: Create an App
      tags:
      - apps
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-apps
      x-content-type: application/json
      x-accepts: application/json
  /v2/apps/{app_id}:
    get:
      description: Retrieve an app in your organization by its ID
      operationId: Apps_getById
      parameters:
      - description: ID of the app to retrieve
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          format: UUID
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app'
          description: OK
        "404":
          description: Not found
      summary: Retrieve an App
      tags:
      - apps
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-apps-app_id
      x-accepts: application/json
  /v2/apps/{app_id}/compliance:
    get:
      description: Retrieve the compliance information for an app in your organization
      operationId: Apps_getComplianceInfo
      parameters:
      - description: ID of the app to query or modify
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          format: UUID
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business-compliance-info'
          description: OK
        "404":
          description: Not found
      summary: Retrieve an App's Compliance Information
      tags:
      - apps
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-apps-app_id-compliance
      x-accepts: application/json
    put:
      description: Add or update compliance information for an app in your organization
      operationId: Apps_updateComplianceInfo
      parameters:
      - description: ID of the app to query or modify
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          format: UUID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business-compliance-info'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business-compliance-info'
          description: OK
        "404":
          description: Not found
      summary: Update an App's Compliance Information
      tags:
      - apps
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v2-apps-app_id-compliance
      x-content-type: application/json
      x-accepts: application/json
  /v2/apps/{app_id}/ach-account:
    get:
      description: Get the App's ach account information.
      operationId: Apps_getAchAccount
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsGetAchAccountResponse'
          description: OK
      summary: Get App ACH Account
      tags:
      - apps
      x-stoplight:
        id: 2oxyh99r8zbio
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-apps-app_id-ach-account
      x-accepts: application/json
    put:
      description: Add an ACH account to an app. The account's owner must match the
        compliance information submitted.
      operationId: Apps_addAchAccount
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppsAddAchAccountRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsAddAchAccountResponse'
          description: OK
      summary: Add App ACH Account
      tags:
      - apps
      x-stoplight:
        id: s91dfrmyrzo6s
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v2-apps-app_id-ach-account
      x-content-type: application/json
      x-accepts: application/json
  /v2/apps/{app_id}/deposit:
    post:
      description: Deposit funds into App wallet by endpoint.
      operationId: Apps_depositFunds
      parameters:
      - description: The ID of the App.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppsDepositFundsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transfer'
          description: OK
      summary: Deposit Funds into App Wallet
      tags:
      - apps
      x-stoplight:
        id: su69v6je8ftwp
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-apps-app_id-deposit
      x-content-type: application/json
      x-accepts: application/json
  /v2/apps/{app_id}/withdraw:
    post:
      description: Withdraw funds from app wallet into app bank account.
      operationId: Apps_withdrawFunds
      parameters:
      - description: The ID of the App.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppsWithdrawFundsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transfer'
          description: OK
      summary: Withdraw Funds From App Wallet
      tags:
      - apps
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-apps-app_id-withdraw
      x-content-type: application/json
      x-accepts: application/json
  /v2/payment-methods:
    get:
      description: Get the payment methods for a payment customer
      operationId: Paymentmethods_listAllPaymentCustomer
      parameters:
      - description: Payment Customer ID
        explode: true
        in: query
        name: customer_id
        required: false
        schema:
          type: string
        style: form
      - description: Number or payment methods to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentmethodsListAllPaymentCustomerResponse'
          description: OK
      summary: List all Payment Methods for a Payment Customer
      tags:
      - payment-methods
      x-stoplight:
        id: 8nz38kl6i46x0
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-payment-methods
      x-accepts: application/json
  /v2/payment-methods/{payment_method_id}:
    get:
      description: Get a payment method by its ID.
      operationId: Paymentmethods_getById
      parameters:
      - description: ID of the payment method to get
        explode: false
        in: path
        name: payment_method_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment-method'
          description: OK
      summary: Retrieve a Payment Method
      tags:
      - payment-methods
      x-stoplight:
        id: hfkiotu86njxm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-payment-methods-payment_method_id
      x-accepts: application/json
  /v2/payment-methods/{payment_method_id}/attach:
    post:
      description: Attach a payment method to a payment customer for future usage.
      operationId: Paymentmethods_attachPaymentMethod
      parameters:
      - description: The ID of the payment method.
        explode: false
        in: path
        name: payment_method_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentmethodsAttachPaymentMethodRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment-method'
          description: OK
      summary: Attach a Payment Method to a Payment Customer
      tags:
      - payment-methods
      x-stoplight:
        id: m5sk0vytfig41
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-payment-methods-payment_method_id-attach
      x-content-type: application/json
      x-accepts: application/json
  /v2/payment-methods/{payment_method_id}/detach:
    post:
      description: Detach a payment method from a payment customer
      operationId: Paymentmethods_detachPaymentMethod
      parameters:
      - description: ID of the payment method.
        explode: false
        in: path
        name: payment_method_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentmethodsDetachPaymentMethodRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment-method'
          description: OK
      summary: Detach Payment Method from a Payment Customer
      tags:
      - payment-methods
      x-stoplight:
        id: 52v2h32hk0vyd
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-payment-methods-payment_method_id-detach
      x-content-type: application/json
      x-accepts: application/json
  /v2/disputes:
    get:
      description: List all disputes
      operationId: Disputes_getAll
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputesGetAllResponse'
          description: OK
      summary: List all Disputes
      tags:
      - disputes
      x-stoplight:
        id: xcdsqvbvhy6mz
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-disputes
      x-accepts: application/json
  /v2/disputes/{dispute_id}:
    get:
      description: Retreieve a dispute by its ID
      operationId: Disputes_getById
      parameters:
      - description: ID of the dispute to retrieve
        explode: false
        in: path
        name: dispute_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dispute'
          description: OK
      summary: Retrieve a Dispute
      tags:
      - disputes
      x-stoplight:
        id: 4geqmcz7edxrq
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-disputes-dispute_id
      x-accepts: application/json
  /v2/disputes/{dispute_id}/evidence:
    post:
      description: Add an evidence file to the dispute
      operationId: Disputes_addEvidenceFile
      parameters:
      - description: ID of the dispute to add evidence to
        explode: false
        in: path
        name: dispute_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DisputesAddEvidenceFileRequest'
        description: ""
      responses:
        "201":
          content: {}
          description: Created
      summary: Add Evidence to a Dispute
      tags:
      - disputes
      x-stoplight:
        id: dkjf9e1kvu9r7
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-disputes-dispute_id-evidence
      x-content-type: multipart/form-data
      x-accepts: application/json
  /v2/disputes/{dispute_id}/submit:
    post:
      description: Submit a dispute
      operationId: Disputes_submitDispute
      parameters:
      - description: ID of the dispute to submit
        explode: false
        in: path
        name: dispute_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisputesSubmitDisputeRequest'
      responses:
        "200":
          description: OK
      summary: Submit a Dispute
      tags:
      - disputes
      x-stoplight:
        id: 5j1hrb4qfvdx6
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-disputes-dispute_id-submit
      x-content-type: application/json
      x-accepts: application/json
  /v2/refunds:
    get:
      description: List all refunds
      operationId: Refunds_getAll
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundsGetAllResponse'
          description: OK
      summary: List all Refunds
      tags:
      - refunds
      x-stoplight:
        id: uhiklv82eudst
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-refunds
      x-accepts: application/json
    post:
      description: Create a Refund
      operationId: Refunds_createRefund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundsCreateRefundRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refund'
          description: OK
      summary: Create a Refund
      tags:
      - refunds
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-refunds
      x-content-type: application/json
      x-accepts: application/json
  /v2/refunds/{refund_id}:
    get:
      description: Retreieve a refund by its ID
      operationId: Refunds_getById
      parameters:
      - description: ID of the refund to retrieve
        explode: false
        in: path
        name: refund_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refund'
          description: OK
      summary: Retrieve a Refund
      tags:
      - refunds
      x-stoplight:
        id: psj0f257s405v
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-refunds-refund_id
      x-accepts: application/json
  /v2/organization-transfers:
    get:
      description: List all transfers to and from an Organization's wallet.
      operationId: Transfers_getAll
      parameters:
      - description: "A limit on the number of objects to be returned, between 1 and\
          \ 100."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "A cursor for use in pagination. `starting_after` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `starting_after`=`aaa` in order to fetch the next page of\
          \ the list."
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "A cursor for use in pagination. `ending_before` is an object\
          \ ID that defines your place in the list. For instance, if you make a list\
          \ request and receive 100 objects, ending with `aaa`, your subsequent call\
          \ can include `ending_before`=`aaa` in order to fetch the previous page\
          \ of the list."
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Include only results with this user ID attached.
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransfersGetAllResponse'
          description: OK
      summary: List all Organization Transfers
      tags:
      - transfers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-organization-transfers
      x-accepts: application/json
    post:
      description: Create a transfer for the organization's wallet to an api app.
      operationId: Transfers_createOrganizationTransfer
      requestBody:
        content:
          application/json:
            examples:
              Send Funds to App:
                value:
                  amount: -1000
                  api_app_id: a169451c-8525-4352-b8ca-070dd449a1a5
              Debit Funds from App:
                value:
                  amount: -1000
                  api_app_id: a169451c-8525-4352-b8ca-070dd449a1a5
            schema:
              $ref: '#/components/schemas/TransfersCreateOrganizationTransferRequest'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transfer'
          description: OK
      summary: Create an Organization Transfer
      tags:
      - transfers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-organization-transfers
      x-content-type: application/json
      x-accepts: application/json
  /v2/organization-transfers/{transfer_id}:
    get:
      description: Get a transfer by its id.
      operationId: Transfers_getById
      parameters:
      - description: ID of the transfer to retrieve
        explode: false
        in: path
        name: transfer_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transfer'
          description: OK
      summary: Get a Transfer
      tags:
      - transfers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-organization-transfers-transfer_id
      x-accepts: application/json
components:
  schemas:
    flow:
      example:
        metadata: ""
        user_id: ""
        created: 2000-01-23T04:56:07.000+00:00
        completed_steps:
        - compliance
        - compliance
        link: https://openapi-generator.tech
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        steps:
        - compliance
        - compliance
      properties:
        id:
          description: ID of the `flow`.
          format: uuid
          type: string
        created:
          description: Date that the `flow` was created.
          format: date-time
          type: string
        user_id:
          description: ID of the `user` that has claimed the `flow`.
          format: uuid
        steps:
          description: Array of steps in the flow.
          items:
            enum:
            - compliance
            - id-verification
            - background-check
            - manage-payments
            - manage-payouts
            - payout
            - redirect
            type: string
          type: array
        completed_steps:
          description: Array of steps that have been completed in the flow.
          items:
            enum:
            - compliance
            - id-verification
            - background-check
            - manage-payments
            - manage-payouts
            - payout
            - redirect
            type: string
          type: array
        link:
          description: URL to access the `flow`. Can be embedded in an `iframe`.
          format: uri
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      type: object
      x-konfig-is-used-in-successful-response: true
    payment-method:
      example:
        country: country
        description: description
        phone_number: phone_number
        cash_tag: cash_tag
        currency: currency
        id: id
        platform: ach
        email: email
        mask: mask
      properties:
        description:
          type: string
        id:
          description: ID of the `payment-method`.
          type: string
        platform:
          enum:
          - ach
          - paypal
          - venmo
          - cash_app
          - intl_transfer
          type: string
        mask:
          type: string
        email:
          type: string
        phone_number:
          type: string
        cash_tag:
          type: string
        country:
          format: iso3166
          type: string
        currency:
          format: iso4217
          type: string
      required:
      - platform
      type: object
      x-konfig-is-used-in-successful-response: true
    payout-link:
      example:
        payee:
          country_code: country_code
          last_name: last_name
          phone_number: phone_number
          first_name: first_name
          email: email
        delivery:
          country_code: country_code
          method: link
          phone_number: phone_number
          email: email
        amount: 0.8008281904610115
        metadata: ""
        tax_exempt: true
        created: 2000-01-23T04:56:07.000+00:00
        claimed_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        link: https://openapi-generator.tech
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: sent
      properties:
        id:
          description: ID of the `payout-link`.
          format: uuid
          type: string
        created:
          description: Date the `payout-link` was created.
          format: date-time
          type: string
        link:
          description: URL to access the `payout-link`.
          format: uri
          type: string
        amount:
          description: The amount to pay in cents.
          type: number
        status:
          description: Status of the `payout-link`.
          enum:
          - sent
          - claimed
          - delivery_pending
          - delivery_failed
          - delivered
          - canceled
          type: string
        payee:
          $ref: '#/components/schemas/payout_link_payee'
        delivery:
          $ref: '#/components/schemas/payout_link_delivery'
        tax_exempt:
          description: Transfers marked as `tax_exempt` will not be counted towards
            the 1099 threshold.
          type: boolean
        claimed_user_id:
          description: ID of the `user` that has claimed the `payout-link`.
          format: uuid
          type: string
        flow_id:
          description: ID of the payout flow UI that is sent to the user.
          format: uuid
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      type: object
      x-konfig-is-used-in-successful-response: true
    payout-request:
      example:
        payee:
          country_code: country_code
          phone_number: phone_number
        amount: 0.8008281904610115
        metadata: ""
        payout-link:
          payee:
            country_code: country_code
            last_name: last_name
            phone_number: phone_number
            first_name: first_name
            email: email
          delivery:
            country_code: country_code
            method: link
            phone_number: phone_number
            email: email
          amount: 0.8008281904610115
          metadata: ""
          tax_exempt: true
          created: 2000-01-23T04:56:07.000+00:00
          claimed_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          link: https://openapi-generator.tech
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: sent
        created: 2000-01-23T04:56:07.000+00:00
        memo: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user:
          metadata: ""
          wallet:
            amount: 0
            credit_balance: 1
            withdrawable_amount: 6
          compliance:
            tax_id_collected: true
            w8_ben_collected: true
            flagged: true
            date_of_birth_collected: true
            "1099_collected": true
            must_collect_1099: true
            id_verified: true
            address_collected: true
          last_name: last_name
          phone_number:
            country_code: country_code
            phone_number: phone_number
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          first_name: first_name
          email: email
        status: created
      properties:
        id:
          description: ID of the `payout-request`.
          format: uuid
          type: string
        created:
          description: Date that the `payout-request` was created.
          format: date-time
          type: string
        amount:
          description: Amount in cents of the `payout-request`.
          type: number
        status:
          description: Status of the `payout-request`.
          enum:
          - created
          - approved
          - rejected
          type: string
        payee:
          $ref: '#/components/schemas/payout_request_payee'
        payout-link:
          $ref: '#/components/schemas/payout-link'
        user:
          $ref: '#/components/schemas/user'
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
        memo: {}
      type: object
      x-konfig-is-used-in-successful-response: true
    transaction:
      example:
        amount: 1.4658129805029452
        metadata: ""
        created: 2000-01-23T04:56:07.000+00:00
        destination_name: destination_name
        id: 6
        type: balance
        source_name: source_name
      properties:
        id:
          type: integer
        amount:
          type: number
        created:
          format: date-time
          type: string
        source_name:
          type: string
        destination_name:
          type: string
        type:
          description: The general category of the transaction
          enum:
          - balance
          - refill
          - payout
          - payment
          - fee
          - surrogate
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      type: object
      x-konfig-is-used-in-successful-response: true
    transfer:
      example:
        amount: 0.8008281904610115
        metadata: ""
        external_data:
          account_id: account_id
          external_id: external_id
          platform: ach
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: refill
        transactions:
        - amount: 1.4658129805029452
          metadata: ""
          created: 2000-01-23T04:56:07.000+00:00
          destination_name: destination_name
          id: 6
          type: balance
          source_name: source_name
        - amount: 1.4658129805029452
          metadata: ""
          created: 2000-01-23T04:56:07.000+00:00
          destination_name: destination_name
          id: 6
          type: balance
          source_name: source_name
        status: created
      properties:
        id:
          format: uuid
          type: string
        created:
          format: date-time
          type: string
        user_id:
          format: uuid
          type: string
        status:
          enum:
          - created
          - pending
          - failed
          - completed
          - flagged
          type: string
        type:
          enum:
          - refill
          - payout
          - balance
          type: string
        amount:
          type: number
        external_data:
          $ref: '#/components/schemas/transfer_external_data'
        transactions:
          items:
            $ref: '#/components/schemas/transaction'
          type: array
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      type: object
      x-konfig-is-used-in-successful-response: true
    user:
      example:
        metadata: ""
        wallet:
          amount: 0
          credit_balance: 1
          withdrawable_amount: 6
        compliance:
          tax_id_collected: true
          w8_ben_collected: true
          flagged: true
          date_of_birth_collected: true
          "1099_collected": true
          must_collect_1099: true
          id_verified: true
          address_collected: true
        last_name: last_name
        phone_number:
          country_code: country_code
          phone_number: phone_number
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        first_name: first_name
        email: email
      properties:
        id:
          format: uuid
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          format: email
          type: string
        phone_number:
          $ref: '#/components/schemas/payout_request_payee'
        wallet:
          $ref: '#/components/schemas/wallet'
        compliance:
          $ref: '#/components/schemas/user_compliance'
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      type: object
      x-konfig-is-used-in-successful-response: true
    wallet:
      example:
        amount: 0
        credit_balance: 1
        withdrawable_amount: 6
      properties:
        amount:
          type: integer
        withdrawable_amount:
          type: integer
        credit_balance:
          type: integer
      type: object
    payment-intent:
      example:
        amount: 0
        payment_method_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        metadata: ""
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        currency: usd
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_secret: client_secret
        status: initialized
      properties:
        id:
          format: uuid
          type: string
        amount:
          description: Amount in cents
          minimum: 0
          type: integer
        currency:
          enum:
          - usd
          type: string
        user_id:
          format: uuid
          type: string
        status:
          enum:
          - initialized
          - created
          - requires_payment_method
          - requires_confirmation
          - requires_action
          - processing
          - succeeded
          - requires_capture
          - canceled
          - failed
          type: string
        transfer_id:
          format: uuid
          type: string
        payment_method_id:
          format: uuid
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
        client_secret:
          description: Only availble on payment intent creation.
          type: string
      required:
      - amount
      - currency
      - id
      title: payment-intent
      type: object
      x-konfig-is-used-in-successful-response: true
    transfer-batch-item:
      example:
        allow_debit: true
        amount: 0
        metadata: "{}"
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tax_exempt: true
        transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        error: error
      properties:
        transfer_id:
          format: uuid
          type: string
        amount:
          type: integer
        user_id:
          format: uuid
          type: string
        tax_exempt:
          type: boolean
        allow_debit:
          type: boolean
        metadata:
          type: object
        error:
          type: string
      title: transfer-batch-item
      type: object
    payment-customer:
      example:
        country_code: country_code
        metadata: "{}"
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created: 2000-01-23T04:56:07.000+00:00
        last_name: last_name
        phone_number: phone_number
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        middle_name: middle_name
        first_name: first_name
        updated: 2000-01-23T04:56:07.000+00:00
        email: email
      properties:
        id:
          format: uuid
          type: string
        user_id:
          format: uuid
          type: string
        email:
          format: email
          type: string
        country_code:
          type: string
        phone_number:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        metadata:
          type: object
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
      title: payment-customer
      type: object
      x-konfig-is-used-in-successful-response: true
    checkout-session:
      example:
        metadata: "{}"
        payment_intent_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created: 2000-01-23T04:56:07.000+00:00
        amount_total: 6
        line_items:
        - quantity: 0
          price_id: price_id
        - quantity: 0
          price_id: price_id
        checkout_session_url: https://openapi-generator.tech
        customer_email: customer_email
        client_reference_id: client_reference_id
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expiry: 2000-01-23T04:56:07.000+00:00
        customer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cancel_url: https://openapi-generator.tech
        updated: 2000-01-23T04:56:07.000+00:00
        status: open
        success_url: https://openapi-generator.tech
      properties:
        id:
          format: uuid
          type: string
        status:
          enum:
          - open
          - complete
          - expired
          type: string
        payment_intent_id:
          format: uuid
          type: string
        success_url:
          format: uri
          type: string
        cancel_url:
          format: uri
          type: string
        checkout_session_url:
          format: uri
          type: string
        client_reference_id:
          type: string
        expiry:
          format: date-time
          type: string
        metadata:
          type: object
        line_items:
          items:
            $ref: '#/components/schemas/checkout_session_line_items_inner'
          type: array
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
        customer_id:
          description: '`payment-customer` ID'
          format: uuid
          type: string
        customer_email:
          format: email
          type: string
        amount_total:
          type: integer
      title: checkout-session
      type: object
      x-konfig-is-used-in-successful-response: true
    app:
      example:
        metadata: ""
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        metrics:
          connected_users: 0
          wallet_balance: wallet_balance
          money_out: money_out
        status: created
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        status:
          description: App verification status. Some Dots use cases require newly
            created apps to pass KYB review.
          enum:
          - created
          - in_review
          - approved
          type: string
        metrics:
          $ref: '#/components/schemas/app_metrics'
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - id
      - metrics
      - name
      type: object
      x-konfig-is-used-in-successful-response: true
    business-compliance-info:
      example:
        flow_of_funds:
          reasons: "Payments are processed via credit card, deposited to Dots, and\
            \ paid to sellers."
          usage: We are a market place for teddy bears.
        directors:
        - address:
            zip: zip
            country: country
            city: city
            state: state
            line2: line2
            line1: line1
          phone: phone
          dob: 2000-01-23
          last_name: last_name
          title: title
          first_name: first_name
          email: email
          ownership_percentage: 0.8008281904610115
        - address:
            zip: zip
            country: country
            city: city
            state: state
            line2: line2
            line1: line1
          phone: phone
          dob: 2000-01-23
          last_name: last_name
          title: title
          first_name: first_name
          email: email
          ownership_percentage: 0.8008281904610115
        company_info:
          dba: dba
          website: website
          incorporation_state: incorporation_state
          name: name
          incorporation_type: sole_proprietorship
          ein: ein
          incorporation_date: 2000-01-23
        contact_info:
          zip: zip
          country: country
          city: city
          phone_number: phone_number
          state: state
          line2: line2
          email: email
          line1: line1
      properties:
        company_info:
          $ref: '#/components/schemas/business_compliance_info_company_info'
        contact_info:
          $ref: '#/components/schemas/business_compliance_info_contact_info'
        directors:
          items:
            $ref: '#/components/schemas/business_compliance_info_directors_inner'
          type: array
        flow_of_funds:
          $ref: '#/components/schemas/business_compliance_info_flow_of_funds'
      required:
      - company_info
      - contact_info
      - directors
      - flow_of_funds
      type: object
      x-konfig-is-used-in-successful-response: true
    dispute:
      example:
        payment_intent_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        evidence:
        - type: customer_communications
          url: https://openapi-generator.tech
        - type: customer_communications
          url: https://openapi-generator.tech
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: needs_response
      properties:
        id:
          format: uuid
          type: string
          x-stoplight:
            id: 7qvkx4zjierd7
        payment_intent_id:
          format: uuid
          type: string
          x-stoplight:
            id: fcyb62tz9e6c9
        status:
          enum:
          - needs_response
          - under_review
          - closed
          - warning_needs_response
          - warning_under_review
          - warning_closed
          - won
          - lost
          type: string
          x-stoplight:
            id: 8kb60u39sbolh
        evidence:
          items:
            $ref: '#/components/schemas/dispute-file'
          type: array
          x-stoplight:
            id: fha0n910f7m91
      title: dispute
      type: object
      x-stoplight:
        id: jcb2z9r96n1zi
      x-konfig-is-used-in-successful-response: true
    dispute-file:
      example:
        type: customer_communications
        url: https://openapi-generator.tech
      properties:
        type:
          enum:
          - customer_communications
          - refund_policy
          - cancellation_policy
          - customer_signature
          - receipt
          - service_documentation
          - duplicate_charge_documentation
          - shipping_documentation
          - uncategorized
          type: string
          x-stoplight:
            id: 58jv6ehzztbxk
        url:
          format: uri
          type: string
          x-stoplight:
            id: 616hb78dc3vyn
      title: dispute-file
      type: object
      x-stoplight:
        id: b6apls98z9e1l
    refund:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
      title: refund
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersCreateNewUserRequest:
      example:
        country_code: country_code
        metadata: ""
        last_name: last_name
        phone_number: phone_number
        first_name: first_name
        email: email
        username: username
      properties:
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        email:
          description: The user's email address.
          format: email
          type: string
        country_code:
          description: The user's phone number country code. e.g. "1"
          type: string
        phone_number:
          description: The user's phone number. e.g. "4157223331".
          type: string
        username:
          description: Username to assign the user.
          maxLength: 50
          minLength: 1
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - country_code
      - email
      - first_name
      - last_name
      - phone_number
      type: object
    UsersUpdateUserObjectRequest:
      example:
        metadata: ""
        auto_payout_enabled: true
        default_payout_method: paypal
      properties:
        default_payout_method:
          description: Configures the user's default payout method. Must be a payout
            method already configured by the user.
          enum:
          - paypal
          - venmo
          - cash_app
          - ach
          - intl_bank
          type: string
        auto_payout_enabled:
          description: Enables auto payout for the user whenever a default payout
            method is defined
          type: boolean
        metadata:
          description: Arbitrary metadata
      type: object
    UsersSubmitComplianceInfoRequest:
      example:
        w9:
          business_name: business_name
          entity_type: individual
          address:
            line_1: line_1
            line_2: line_2
            country: country
            city: city
            postcode: postcode
            state: state
          date_of_birth: 2000-01-23
          tin: tin
          last_name: last_name
          first_name: first_name
        w8ben:
          tax_treaty_income_type: interest1
          address:
            line_1: line_1
            line_2: line_2
            country: country
            city: city
            postcode: postcode
            state: state
          foreign_tax_id: foreign_tax_id
          signature:
            name: name
            consent: true
            email: email
          date_of_birth: 2000-01-23
          name: name
          tin: tin
          tax_treaty_country: tax_treaty_country
          citizenship_country: citizenship_country
          tax_treaty_rate: 0.8008281904610115
          tax_treaty_explanation: tax_treaty_explanation
          tax_treaty_citation: tax_treaty_citation
      properties:
        w9:
          $ref: '#/components/schemas/UsersSubmitComplianceInfoRequest_w9'
        w8ben:
          $ref: '#/components/schemas/UsersSubmitComplianceInfoRequest_w8ben'
      type: object
    UsersSendVerificationTokenRequest:
      example:
        use_voice: false
      properties:
        use_voice:
          default: false
          description: Defaults to `false` which sends token via SMS. Set `true` to
            receive via call instead.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSendVerificationTokenRequest-properties-use_voice
      type: object
    UsersVerifyUserTokenRequest:
      example:
        token: token
      properties:
        token:
          description: The token sent to the user.
          minLength: 6
          type: string
      required:
      - token
      type: object
    UsersAddPayoutMethodRequest:
      example:
        account_number: account_number
        account_type: checking
        phone_number: phone_number
        handle: handle
        cash_tag: cash_tag
        routing_number: routing_number
        platform: paypal
        email: email
      properties:
        platform:
          description: Payout platform to add.
          enum:
          - paypal
          - venmo
          - cash_app
          - ach
          type: string
        routing_number:
          description: Bank account or Cash App routing number. Required if `platform`
            = `ach` or `cash_app`.
          type: string
        account_number:
          description: Bank account or Cash App account number. Required if `platform`
            = `ach` or `cash_app`.
          type: string
        account_type:
          description: Bank account type. Required if `platform` = `ach`.
          enum:
          - checking
          - savings
          type: string
        email:
          description: PayPal email address. Required if `platform` = `paypal`.
          type: string
        phone_number:
          description: Venmo phone number. One of `phone_number` or `handle` is required
            if `platform` = `venmo`.
          type: string
        handle:
          description: Venmo handle. One of `phone_number` or `handle` is required
            if `platform` = `venmo`.
          type: string
        cash_tag:
          description: Cash App Cash Tag. Required if `platform` = `cash_app`.
          type: string
      required:
      - platform
      type: object
    TransfersCreateTransferRequest:
      example:
        amount: 0
        metadata: ""
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tax_exempt: ""
        idempotency_key: ""
      properties:
        amount:
          description: The amount in cents to transfer. Negative amount transfers
            money from the `app` to the `user`.
          type: integer
        user_id:
          description: The user's id.
          format: uuid
          type: string
        tax_exempt:
          description: Transfers marked as `tax_exempt` will not be counted towards
            the 1099 threshold.
        idempotency_key:
          description: UUID that will be used to idempotently handle requests. Transfers
            with existing idempotency keys will be rejected.
          format: uuid
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - amount
      - user_id
      type: object
    FlowsCreateNewFlowRequest:
      example:
        metadata: ""
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        steps:
        - ""
        - ""
      properties:
        steps:
          description: "A list of steps. Can either be a string or an object with\
            \ additional properties. Example: A `redirect` step looks like {\"name\"\
            : \"redirect\", \"redirect_url\": \"https://example.com\"}"
          items: {}
          type: array
          uniqueItems: true
        user_id:
          description: The user's id.
          format: uuid
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - steps
      type: object
    PayoutlinksCreatePayoutLinkRequest:
      example:
        payee:
          country_code: country_code
          last_name: last_name
          phone_number: phone_number
          first_name: first_name
          email: email
        delivery:
          method: sms
          message: message
        amount: 0
        metadata: ""
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tax_exempt: true
        force_collect_compliance_information: false
        memo: memo
        idempotency_key: ""
        payout_fee_party: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        additional_steps:
        - compliance
        - compliance
      properties:
        user_id:
          description: The user's id.
          format: uuid
          type: string
        payee:
          $ref: '#/components/schemas/PayoutlinksCreatePayoutLinkRequest_payee'
        amount:
          description: Amount to be paid in cents.
          type: integer
        delivery:
          $ref: '#/components/schemas/PayoutlinksCreatePayoutLinkRequest_delivery'
        force_collect_compliance_information:
          default: false
          description: Force the collection of 1099 or W-8 information. Defaults to
            `false`.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PayoutlinksCreatePayoutLinkRequest-properties-force_collect_compliance_information
        tax_exempt:
          description: Payout links marked as `tax_exempt` will not be counted towards
            the 1099 threshold.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
        memo:
          description: Add a memo to the top of the Payout Link
          type: string
        idempotency_key:
          description: "Unique UUID key that prevents duplicate requests from being\
            \ processed. If a payout link with the idempotency key exists, a new link\
            \ will not be created and the existing link will be returned instead."
          format: uuid
        payout_fee_party:
          description: Overrides the setting for which party will pay fees on this
            payout. This takes precedence over the default for your application.
          enum:
          - user
          - platform
          format: uuid
          type: string
        additional_steps:
          description: Array of steps in the flow.
          items:
            enum:
            - compliance
            - id-verification
            - background-check
            - manage-payments
            - manage-payouts
            - payout
            - redirect
            type: string
          type: array
      required:
      - amount
      type: object
    PayoutsCreatePayoutRequest:
      example:
        amount: 0
        metadata: ""
        account_id: account_id
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fund: true
        idempotency_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        platform: paypal
      properties:
        user_id:
          description: ID of the `user` who you are creating the payout for.
          format: uuid
          type: string
        amount:
          description: Amount in cents to payout the user.
          type: integer
        platform:
          description: "Platform that you are paying out the `user` through,"
          enum:
          - paypal
          - venmo
          - ach
          - bank_transfer
          - cash_app
          - payoneer
          - airtm
          - default
          type: string
        account_id:
          description: The bank account ID you are paying to. Required for `ach` and
            `intl_bank`.
          type: string
        fund:
          description: Creates a transfer for the amount to the user before creating
            the payout. The funds are returned if the payout does not succeed.
          type: boolean
        idempotency_key:
          description: UUID that will be used to idempotently handle requests. Transfers
            with existing idempotency keys will be rejected.
          format: uuid
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - amount
      - platform
      - user_id
      type: object
    PaymentsCreateTransactionRequest: {}
    PayoutsSendPayoutRequest:
      example:
        payee:
          country_code: country_code
          phone_number: phone_number
        delivery:
          message: message
        amount: 0
        metadata: ""
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tax_exempt: true
        force_collect_compliance_information: false
        memo: memo
        idempotency_key: ""
        payout_fee_party: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        additional_steps:
        - compliance
        - compliance
      properties:
        amount:
          description: The amount in cents to pay the user.
          type: integer
        user_id:
          description: The user's id. `user_id` or `payee` is required.
          format: uuid
          type: string
        payee:
          $ref: '#/components/schemas/PayoutsSendPayoutRequest_payee'
        delivery:
          $ref: '#/components/schemas/PayoutsSendPayoutRequest_delivery'
        force_collect_compliance_information:
          default: false
          description: Collect 1099 or w8-ben information.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PayoutsSendPayoutRequest-properties-force_collect_compliance_information
        additional_steps:
          description: Array of steps in the flow.
          items:
            enum:
            - compliance
            - id-verification
            - background-check
            - manage-payments
            - manage-payouts
            - payout
            - redirect
            type: string
          type: array
        tax_exempt:
          description: Payouts marked as `tax_exempt` will not be counted towards
            the 1099 threshold.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
        memo:
          description: Add a memo to the top of the Payout Link
          type: string
        idempotency_key:
          description: "Unique UUID key that prevents duplicate requests from being\
            \ processed. If a payout link with the idempotency key exists, a new link\
            \ will not be created and the existing link will be returned instead."
          format: uuid
        payout_fee_party:
          description: Overrides the setting for which party will pay fees on this
            payout. This takes precedence over the default for your application.
          enum:
          - user
          - platform
          format: uuid
          type: string
      required:
      - amount
      type: object
    PayoutrequestsSubmitRequestRequest:
      example:
        payee:
          country_code: country_code
          phone_number: phone_number
        amount: 0
        metadata: ""
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        memo: memo
      properties:
        amount:
          description: The amount in cents to pay the user.
          type: integer
        user_id:
          description: The user's id. `user_id` or `payee` is required.
          format: uuid
          type: string
        payee:
          $ref: '#/components/schemas/PayoutsSendPayoutRequest_payee'
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
        memo:
          description: Add a memo to payout request
          type: string
      required:
      - amount
      type: object
    PaymentintentsCreateIntentRequest:
      example:
        confirm: false
        transfer_data:
          destination_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        amount: 0
        payment_method_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        metadata: true
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        payment_method_types:
        - card
        - card
        description: description
        setup_future_usage: on_session
        currency: usd
        customer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        application_fee_amount: 0
      properties:
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        amount:
          description: Amount in cents
          type: integer
        currency:
          description: Currency of the payment. Currently only `usd` is supported.
          enum:
          - usd
          type: string
        confirm:
          default: false
          description: Set to `true` to attempt to confirm this payment intent immediately.
            Defaults to `false`.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaymentintentsCreateIntentRequest-properties-confirm
        user_id:
          description: ID of a Dots `user` making this payment.
          format: uuid
          type: string
        customer_id:
          description: ID of a Dots `payment_customer` making this payment.
          format: uuid
          type: string
        payment_method_id:
          description: ID of the payment method to attach to this payment intent.
          format: uuid
          type: string
        payment_method_types:
          description: Currently only `card` is supported.
          items:
            enum:
            - card
            type: string
          type: array
        setup_future_usage:
          enum:
          - on_session
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: boolean
        transfer_data:
          $ref: '#/components/schemas/PaymentintentsCreateIntentRequest_transfer_data'
        application_fee_amount:
          description: Amount in cents to transfer to the application's wallet as
            a platform fee.
          minimum: 0
          type: integer
      required:
      - amount
      - currency
      type: object
    PaymentintentsConfirmIntentRequest:
      example:
        payment_method_id: payment_method_id
      properties:
        payment_method_id:
          description: ID of the payment method to confirm the intent with.
          type: string
          x-stoplight:
            id: zi4bm7qnkmn6i
      required:
      - payment_method_id
      type: object
    TransferbatchesCreateBatchRequest:
      example:
        metadata: "{}"
        idempotency_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        items:
        - allow_debit: true
          amount: 0
          metadata: "{}"
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tax_exempt: true
          idempotency_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - allow_debit: true
          amount: 0
          metadata: "{}"
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tax_exempt: true
          idempotency_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            $ref: '#/components/schemas/TransferbatchesCreateBatchRequest_items_inner'
          type: array
        idempotency_key:
          format: uuid
          type: string
        metadata:
          type: object
      type: object
    TransferbatchesCreateBatchRequest1:
      properties: {}
      type: object
    CheckoutsessionsCreateSessionRequest:
      example:
        mode: payment
        metadata: "{}"
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customer_email: customer_email
        client_reference_id: client_reference_id
        line_items:
        - price_data:
            amount: 0
            currency: usd
            product_data:
              images:
              - https://openapi-generator.tech
              - https://openapi-generator.tech
              metadata: "{}"
              name: name
              description: description
          quantity: 6
        - price_data:
            amount: 0
            currency: usd
            product_data:
              images:
              - https://openapi-generator.tech
              - https://openapi-generator.tech
              metadata: "{}"
              name: name
              description: description
          quantity: 6
        customer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cancel_url: https://openapi-generator.tech
        expires_in: 10800
        success_url: https://openapi-generator.tech
      properties:
        line_items:
          items:
            $ref: '#/components/schemas/CheckoutsessionsCreateSessionRequest_line_items_inner'
          type: array
          uniqueItems: true
        customer_email:
          format: email
          type: string
        client_reference_id:
          type: string
        success_url:
          format: uri
          type: string
        cancel_url:
          format: uri
          type: string
        mode:
          enum:
          - payment
          type: string
        user_id:
          description: Supply a Dots user ID in place of a customer ID
          format: uuid
          type: string
        customer_id:
          format: uuid
          type: string
        expires_in:
          default: 10800
          example: 10800
          maximum: 10800
          minimum: 0
          type: integer
          x-konfig-original-example: 10800
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CheckoutsessionsCreateSessionRequest-properties-expires_in
        metadata:
          type: object
      required:
      - line_items
      - mode
      - success_url
      type: object
    AppsCreateNewAppRequest:
      example:
        metadata: ""
        name: name
      properties:
        name:
          description: The name of the application.
          maxLength: 60
          minLength: 3
          type: string
          x-stoplight:
            id: yxeyh7kr44vob
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          x-stoplight:
            id: zv0zi3c333dvg
      required:
      - name
      type: object
    AppsAddAchAccountRequest:
      example:
        account_number: account_number
        account_type: checking
        routing_number: routing_number
      properties:
        account_number:
          description: The bank account number.
          pattern: "[0-9]{7,20}"
          type: string
          x-stoplight:
            id: il8jsqrfkjtw8
        routing_number:
          description: The bank's ABA routing number.
          pattern: "[0-9]{9}"
          type: string
          x-stoplight:
            id: pshq2c7pk7p6w
        account_type:
          description: The type of bank account.
          enum:
          - checking
          - savings
          type: string
          x-stoplight:
            id: ngkifj36w2fn2
      required:
      - account_number
      - account_type
      - routing_number
      type: object
    AppsDepositFundsRequest:
      example:
        amount: 0
        idempotency_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        amount:
          description: The amount to deposit in cents.
          type: integer
          x-stoplight:
            id: x8ifasn0a26bk
        idempotency_key:
          description: Idempotency key in UUID format.
          format: uuid
          type: string
          x-stoplight:
            id: x3s7qvqawo1qb
      required:
      - amount
      type: object
    AppsWithdrawFundsRequest:
      example:
        amount: 0
        idempotency_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        amount:
          description: The amount to deposit in cents.
          type: integer
        idempotency_key:
          description: Idempotency key in UUID format.
          format: uuid
          type: string
      required:
      - amount
      type: object
    PaymentmethodsAttachPaymentMethodRequest:
      example:
        customer_id: customer_id
      properties:
        customer_id:
          description: ID of the payment customer
          type: string
          x-stoplight:
            id: 4uj7v7zpfc96f
      required:
      - customer_id
      type: object
    PaymentmethodsDetachPaymentMethodRequest:
      example:
        customer_id: customer_id
      properties:
        customer_id:
          description: ID of the payment customer to detach the payment method from.
          type: string
          x-stoplight:
            id: udd5vmbp33cwe
      type: object
    DisputesAddEvidenceFileRequest:
      properties:
        type:
          enum:
          - customer_communications
          - refund_policy
          - cancellation_policy
          - customer_signature
          - receipt
          - service_documentation
          - duplicate_charge_documentation
          - shipping_documentation
          - uncategorized
          type: string
          x-stoplight:
            id: duy0d05akb9c2
        content:
          type: string
          x-stoplight:
            id: eluu5effho7x5
      type: object
    DisputesSubmitDisputeRequest:
      example:
        description: description
      properties:
        description:
          type: string
          x-stoplight:
            id: u40t07qa6e0hb
      required:
      - description
      type: object
    RefundsCreateRefundRequest:
      example:
        reason: duplicate
        amount: 0
        metadata: true
        payment_intent_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        amount:
          description: Amount in cents
          type: integer
        payment_intent_id:
          description: ID of the `payment_intent` you are refunding.
          format: uuid
          type: string
        reason:
          enum:
          - duplicate
          - fraudulent
          - requested_by_customer
          - expired_uncaptured_charge
          - partial_capture
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: boolean
      required:
      - amount
      - payment_intent_id
      type: object
    TransfersCreateOrganizationTransferRequest:
      example:
        amount: 0
        metadata: ""
        idempotency_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        api_app_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        amount:
          description: The amount in cents to transfer. Negative amount transfers
            money from the `app` to the `user`.
          type: integer
        api_app_id:
          description: API App ID to transact with.
          format: uuid
          type: string
          x-stoplight:
            id: g8a7zc7z7uoxl
        idempotency_key:
          format: uuid
          type: string
          x-stoplight:
            id: 212khhchum63l
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - amount
      - api_app_id
      type: object
    UsersListAllUsersResponse:
      example:
        data:
        - metadata: ""
          wallet:
            amount: 0
            credit_balance: 1
            withdrawable_amount: 6
          compliance:
            tax_id_collected: true
            w8_ben_collected: true
            flagged: true
            date_of_birth_collected: true
            "1099_collected": true
            must_collect_1099: true
            id_verified: true
            address_collected: true
          last_name: last_name
          phone_number:
            country_code: country_code
            phone_number: phone_number
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          first_name: first_name
          email: email
        - metadata: ""
          wallet:
            amount: 0
            credit_balance: 1
            withdrawable_amount: 6
          compliance:
            tax_id_collected: true
            w8_ben_collected: true
            flagged: true
            date_of_birth_collected: true
            "1099_collected": true
            must_collect_1099: true
            id_verified: true
            address_collected: true
          last_name: last_name
          phone_number:
            country_code: country_code
            phone_number: phone_number
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          first_name: first_name
          email: email
        has_more: true
      properties:
        data:
          description: Array of `user` objects.
          items:
            $ref: '#/components/schemas/user'
          type: array
        has_more:
          description: '`true` if there are more objects.'
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersListPayoutMethodsResponse:
      description: Array of payout methods registered to the user.
      items:
        $ref: '#/components/schemas/payment-method'
      type: array
      x-konfig-is-used-in-successful-response: true
    TransfersListAllResponse:
      example:
        data:
        - amount: 0.8008281904610115
          metadata: ""
          external_data:
            account_id: account_id
            external_id: external_id
            platform: ach
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: refill
          transactions:
          - amount: 1.4658129805029452
            metadata: ""
            created: 2000-01-23T04:56:07.000+00:00
            destination_name: destination_name
            id: 6
            type: balance
            source_name: source_name
          - amount: 1.4658129805029452
            metadata: ""
            created: 2000-01-23T04:56:07.000+00:00
            destination_name: destination_name
            id: 6
            type: balance
            source_name: source_name
          status: created
        - amount: 0.8008281904610115
          metadata: ""
          external_data:
            account_id: account_id
            external_id: external_id
            platform: ach
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: refill
          transactions:
          - amount: 1.4658129805029452
            metadata: ""
            created: 2000-01-23T04:56:07.000+00:00
            destination_name: destination_name
            id: 6
            type: balance
            source_name: source_name
          - amount: 1.4658129805029452
            metadata: ""
            created: 2000-01-23T04:56:07.000+00:00
            destination_name: destination_name
            id: 6
            type: balance
            source_name: source_name
          status: created
        has_more: true
      properties:
        has_more:
          description: '`true` if there are more `transfers`.'
          type: boolean
        data:
          description: Array of `transfers`.
          items:
            $ref: '#/components/schemas/transfer'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    FlowsListAllResponse:
      example:
        data:
        - metadata: ""
          user_id: ""
          created: 2000-01-23T04:56:07.000+00:00
          completed_steps:
          - compliance
          - compliance
          link: https://openapi-generator.tech
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          steps:
          - compliance
          - compliance
        - metadata: ""
          user_id: ""
          created: 2000-01-23T04:56:07.000+00:00
          completed_steps:
          - compliance
          - compliance
          link: https://openapi-generator.tech
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          steps:
          - compliance
          - compliance
        has_more: true
      properties:
        has_more:
          description: '`true` if there are more `flows`.'
          type: boolean
        data:
          description: Array of `flow` objects.
          items:
            $ref: '#/components/schemas/flow'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    PayoutlinksListAllResponse:
      example:
        data:
        - payee:
            country_code: country_code
            last_name: last_name
            phone_number: phone_number
            first_name: first_name
            email: email
          delivery:
            country_code: country_code
            method: link
            phone_number: phone_number
            email: email
          amount: 0.8008281904610115
          metadata: ""
          tax_exempt: true
          created: 2000-01-23T04:56:07.000+00:00
          claimed_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          link: https://openapi-generator.tech
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: sent
        - payee:
            country_code: country_code
            last_name: last_name
            phone_number: phone_number
            first_name: first_name
            email: email
          delivery:
            country_code: country_code
            method: link
            phone_number: phone_number
            email: email
          amount: 0.8008281904610115
          metadata: ""
          tax_exempt: true
          created: 2000-01-23T04:56:07.000+00:00
          claimed_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          link: https://openapi-generator.tech
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: sent
        has_more: true
      properties:
        has_more:
          description: '`true` if there are more `payout-links`.'
          type: boolean
        data:
          description: Array of `payout-links`.
          items:
            $ref: '#/components/schemas/payout-link'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    PayoutrequestsGetAllPayoutsResponse:
      example:
        data:
        - payee:
            country_code: country_code
            phone_number: phone_number
          amount: 0.8008281904610115
          metadata: ""
          payout-link:
            payee:
              country_code: country_code
              last_name: last_name
              phone_number: phone_number
              first_name: first_name
              email: email
            delivery:
              country_code: country_code
              method: link
              phone_number: phone_number
              email: email
            amount: 0.8008281904610115
            metadata: ""
            tax_exempt: true
            created: 2000-01-23T04:56:07.000+00:00
            claimed_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            flow_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            link: https://openapi-generator.tech
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: sent
          created: 2000-01-23T04:56:07.000+00:00
          memo: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user:
            metadata: ""
            wallet:
              amount: 0
              credit_balance: 1
              withdrawable_amount: 6
            compliance:
              tax_id_collected: true
              w8_ben_collected: true
              flagged: true
              date_of_birth_collected: true
              "1099_collected": true
              must_collect_1099: true
              id_verified: true
              address_collected: true
            last_name: last_name
            phone_number:
              country_code: country_code
              phone_number: phone_number
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            first_name: first_name
            email: email
          status: created
        - payee:
            country_code: country_code
            phone_number: phone_number
          amount: 0.8008281904610115
          metadata: ""
          payout-link:
            payee:
              country_code: country_code
              last_name: last_name
              phone_number: phone_number
              first_name: first_name
              email: email
            delivery:
              country_code: country_code
              method: link
              phone_number: phone_number
              email: email
            amount: 0.8008281904610115
            metadata: ""
            tax_exempt: true
            created: 2000-01-23T04:56:07.000+00:00
            claimed_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            flow_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            link: https://openapi-generator.tech
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: sent
          created: 2000-01-23T04:56:07.000+00:00
          memo: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user:
            metadata: ""
            wallet:
              amount: 0
              credit_balance: 1
              withdrawable_amount: 6
            compliance:
              tax_id_collected: true
              w8_ben_collected: true
              flagged: true
              date_of_birth_collected: true
              "1099_collected": true
              must_collect_1099: true
              id_verified: true
              address_collected: true
            last_name: last_name
            phone_number:
              country_code: country_code
              phone_number: phone_number
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            first_name: first_name
            email: email
          status: created
        has_more: true
      properties:
        has_more:
          description: '`true` if there are more `payout-requests`.'
          type: boolean
        data:
          description: Array of `payout-request`.
          items:
            $ref: '#/components/schemas/payout-request'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    TransactionsListAllResponse:
      example:
        data:
        - amount: 1.4658129805029452
          metadata: ""
          created: 2000-01-23T04:56:07.000+00:00
          destination_name: destination_name
          id: 6
          type: balance
          source_name: source_name
        - amount: 1.4658129805029452
          metadata: ""
          created: 2000-01-23T04:56:07.000+00:00
          destination_name: destination_name
          id: 6
          type: balance
          source_name: source_name
        has_more: true
      properties:
        has_more:
          description: '`true` if there are more `transactions`.'
          type: boolean
        data:
          description: Array of `transactions`.
          items:
            $ref: '#/components/schemas/transaction'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    PaymentintentsListAllResponse:
      description: Array of `payment-intents`.
      items:
        $ref: '#/components/schemas/payment-intent'
      type: array
      x-konfig-is-used-in-successful-response: true
    PaymentintentsGetByIdResponse:
      properties:
        error:
          enum:
          - PaymentIntent not found
          type: string
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    TransferbatchesListAllResponse:
      example:
        data:
        - metadata: "{}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          items:
          - allow_debit: true
            amount: 0
            metadata: "{}"
            user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tax_exempt: true
            transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            error: error
          - allow_debit: true
            amount: 0
            metadata: "{}"
            user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tax_exempt: true
            transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            error: error
          status: completed
        - metadata: "{}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          items:
          - allow_debit: true
            amount: 0
            metadata: "{}"
            user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tax_exempt: true
            transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            error: error
          - allow_debit: true
            amount: 0
            metadata: "{}"
            user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tax_exempt: true
            transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            error: error
          status: completed
        has_more: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/TransferbatchesListAllResponse_data_inner'
          type: array
        has_more:
          description: '`true` if there are more objects.'
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
    TransferbatchesCreateBatchResponse:
      example:
        metadata: "{}"
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        items:
        - allow_debit: true
          amount: 0
          metadata: "{}"
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tax_exempt: true
          transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          error: error
        - allow_debit: true
          amount: 0
          metadata: "{}"
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tax_exempt: true
          transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          error: error
        status: pending
      properties:
        id:
          format: uuid
          type: string
        status:
          enum:
          - pending
          - completed
          type: string
        metadata:
          type: object
        items:
          items:
            $ref: '#/components/schemas/transfer-batch-item'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    TransferbatchesGetByIdResponse:
      example:
        metadata: "{}"
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        items:
        - allow_debit: true
          amount: 0
          metadata: "{}"
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tax_exempt: true
          transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          error: error
        - allow_debit: true
          amount: 0
          metadata: "{}"
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tax_exempt: true
          transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          error: error
        status: completed
      properties:
        id:
          format: uuid
          type: string
        status:
          enum:
          - completed
          - pending
          type: string
        metadata:
          type: object
        items:
          items:
            $ref: '#/components/schemas/transfer-batch-item'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    PaymentcustomersListAllResponse:
      example:
        data:
        - country_code: country_code
          metadata: "{}"
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          last_name: last_name
          phone_number: phone_number
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          middle_name: middle_name
          first_name: first_name
          updated: 2000-01-23T04:56:07.000+00:00
          email: email
        - country_code: country_code
          metadata: "{}"
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          last_name: last_name
          phone_number: phone_number
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          middle_name: middle_name
          first_name: first_name
          updated: 2000-01-23T04:56:07.000+00:00
          email: email
        has_more: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/payment-customer'
          type: array
        has_more:
          description: '`true` if there are more objects.'
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
    PaymentcustomersCreateCustomerResponse:
      example:
        country_code: country_code
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        phone_number: phone_number
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        id:
          format: uuid
          type: string
        user_id:
          format: uuid
          type: string
        email:
          format: email
          type: string
        country_code:
          type: string
        phone_number:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    CheckoutsessionsListAllResponse:
      example:
        data:
        - metadata: "{}"
          payment_intent_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          amount_total: 6
          line_items:
          - quantity: 0
            price_id: price_id
          - quantity: 0
            price_id: price_id
          checkout_session_url: https://openapi-generator.tech
          customer_email: customer_email
          client_reference_id: client_reference_id
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expiry: 2000-01-23T04:56:07.000+00:00
          customer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cancel_url: https://openapi-generator.tech
          updated: 2000-01-23T04:56:07.000+00:00
          status: open
          success_url: https://openapi-generator.tech
        - metadata: "{}"
          payment_intent_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          amount_total: 6
          line_items:
          - quantity: 0
            price_id: price_id
          - quantity: 0
            price_id: price_id
          checkout_session_url: https://openapi-generator.tech
          customer_email: customer_email
          client_reference_id: client_reference_id
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expiry: 2000-01-23T04:56:07.000+00:00
          customer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cancel_url: https://openapi-generator.tech
          updated: 2000-01-23T04:56:07.000+00:00
          status: open
          success_url: https://openapi-generator.tech
        has_more: true
      properties:
        has_more:
          description: '`true` if there are more objects.'
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/checkout-session'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    AppsListAllResponse:
      items:
        $ref: '#/components/schemas/app'
      type: array
      x-konfig-is-used-in-successful-response: true
    AppsGetAchAccountResponse:
      example:
        name: name
        mask: mask
      properties:
        mask:
          description: The last four digits of the bank account number.
          type: string
          x-stoplight:
            id: 1m2ie10baxulo
        name:
          description: The name of the bank account.
          type: string
          x-stoplight:
            id: lkkkghd75ookg
      type: object
      x-konfig-is-used-in-successful-response: true
    AppsAddAchAccountResponse:
      example:
        name: name
        mask: mask
      properties:
        mask:
          description: The last four digits of the bank account number.
          type: string
          x-stoplight:
            id: rt2gwtq9a5lem
        name:
          description: The name of the bank account.
          type: string
          x-stoplight:
            id: cf8wn1nuin80v
      type: object
      x-konfig-is-used-in-successful-response: true
    PaymentmethodsListAllPaymentCustomerResponse:
      example:
        data:
        - country: country
          description: description
          phone_number: phone_number
          cash_tag: cash_tag
          currency: currency
          id: id
          platform: ach
          email: email
          mask: mask
        - country: country
          description: description
          phone_number: phone_number
          cash_tag: cash_tag
          currency: currency
          id: id
          platform: ach
          email: email
          mask: mask
        has_more: true
      properties:
        data:
          description: List of payment methods.
          items:
            $ref: '#/components/schemas/payment-method'
          type: array
          x-stoplight:
            id: 94rcge4a2wqdo
        has_more:
          type: boolean
          x-stoplight:
            id: rwtvo5wcuw1tv
      type: object
      x-konfig-is-used-in-successful-response: true
    DisputesGetAllResponse:
      example:
        data:
        - payment_intent_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          evidence:
          - type: customer_communications
            url: https://openapi-generator.tech
          - type: customer_communications
            url: https://openapi-generator.tech
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: needs_response
        - payment_intent_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          evidence:
          - type: customer_communications
            url: https://openapi-generator.tech
          - type: customer_communications
            url: https://openapi-generator.tech
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: needs_response
        has_more: true
      properties:
        has_more:
          type: boolean
          x-stoplight:
            id: y725pkv20qk98
        data:
          items:
            $ref: '#/components/schemas/dispute'
          type: array
          x-stoplight:
            id: 5sfqy95seqf2u
      type: object
      x-konfig-is-used-in-successful-response: true
    RefundsGetAllResponse:
      example:
        data:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        has_more: true
      properties:
        has_more:
          type: boolean
          x-stoplight:
            id: w0z8u5slzutnp
        data:
          items:
            $ref: '#/components/schemas/refund'
          type: array
          x-stoplight:
            id: uangvijaw6vgu
      type: object
      x-konfig-is-used-in-successful-response: true
    TransfersGetAllResponse:
      example:
        data:
        - amount: 0.8008281904610115
          metadata: ""
          external_data:
            account_id: account_id
            external_id: external_id
            platform: ach
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: refill
          transactions:
          - amount: 1.4658129805029452
            metadata: ""
            created: 2000-01-23T04:56:07.000+00:00
            destination_name: destination_name
            id: 6
            type: balance
            source_name: source_name
          - amount: 1.4658129805029452
            metadata: ""
            created: 2000-01-23T04:56:07.000+00:00
            destination_name: destination_name
            id: 6
            type: balance
            source_name: source_name
          status: created
        - amount: 0.8008281904610115
          metadata: ""
          external_data:
            account_id: account_id
            external_id: external_id
            platform: ach
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: refill
          transactions:
          - amount: 1.4658129805029452
            metadata: ""
            created: 2000-01-23T04:56:07.000+00:00
            destination_name: destination_name
            id: 6
            type: balance
            source_name: source_name
          - amount: 1.4658129805029452
            metadata: ""
            created: 2000-01-23T04:56:07.000+00:00
            destination_name: destination_name
            id: 6
            type: balance
            source_name: source_name
          status: created
        has_more: true
      properties:
        has_more:
          description: '`true` if there are more `transfers`.'
          type: boolean
        data:
          description: Array of `transfers`.
          items:
            $ref: '#/components/schemas/transfer'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-components-schemas-business-compliance-info-properties-flow_of_funds-properties-reasons:
      example: "Payments are processed via credit card, deposited to Dots, and paid\
        \ to sellers."
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-business-compliance-info-properties-flow_of_funds-properties-usage:
      example: We are a market place for teddy bears.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSendVerificationTokenRequest-properties-use_voice:
      example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-FlowsCreateNewFlowRequest-properties-steps-items-oneOf-1-properties-auto_payout_enabled
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-FlowsCreateNewFlowRequest-properties-steps-items-oneOf-1-properties-hide_continue_button
    : example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PayoutlinksCreatePayoutLinkRequest-properties-force_collect_compliance_information:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PayoutsSendPayoutRequest-properties-force_collect_compliance_information:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PaymentintentsCreateIntentRequest-properties-confirm:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CheckoutsessionsCreateSessionRequest-properties-expires_in:
      example: 10800
      type: number
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--v2-users:
      properties:
        starting_after:
          format: uuid
          type: string
        limit:
          type: integer
        ending_before:
          format: uuid
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - starting_after
      - limit
      - ending_before
    konfig-generated-schema-single-parameter-schema-post--v2-users:
      properties:
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        email:
          description: The user's email address.
          format: email
          type: string
        country_code:
          description: The user's phone number country code. e.g. "1"
          type: string
        phone_number:
          description: The user's phone number. e.g. "4157223331".
          type: string
        username:
          description: Username to assign the user.
          maxLength: 50
          minLength: 1
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - country_code
      - email
      - first_name
      - last_name
      - phone_number
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--v2-users-user_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-users-user_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-patch--v2-users-user_id:
      properties:
        default_payout_method:
          description: Configures the user's default payout method. Must be a payout
            method already configured by the user.
          enum:
          - paypal
          - venmo
          - cash_app
          - ach
          - intl_bank
          type: string
        auto_payout_enabled:
          description: Enables auto payout for the user whenever a default payout
            method is defined
          type: boolean
        metadata:
          description: Arbitrary metadata
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--v2-users-user_id-compliance:
      properties:
        w9:
          description: W-9 equivalent for users based in the United States.
          properties:
            entity_type:
              description: "Type of entity filling out the W-9, `business` or `individual`."
              enum:
              - individual
              - business
              type: string
            business_name:
              description: Legal bussiness name. Required if `entity_type` is `business`.
              type: string
            first_name:
              type: string
            last_name:
              type: string
            date_of_birth:
              description: Required if `entity_type` is `individual`.
              format: date
              type: string
            tin:
              description: SSN if `entity_type` is `individual`. EIN if `entity_type`
                is `business`.
              maxLength: 9
              minLength: 9
              type: string
            address:
              description: Address of the user or their business.
              properties:
                line_1:
                  description: Address line 1.
                  type: string
                line_2:
                  description: Address Line 2
                  type: string
                city:
                  description: City.
                  type: string
                state:
                  description: State.
                  type: string
                country:
                  description: Country.
                  type: string
                postcode:
                  description: Postal code or Zip code.
                  type: string
              required:
              - city
              - country
              - line_1
              - postcode
              - state
              type: object
          required:
          - address
          - date_of_birth
          - entity_type
          - tin
          type: object
        w8ben:
          description: W8-BEN form for foreign payees.
          properties:
            name:
              description: Full name of the person.
              type: string
            citizenship_country:
              description: The two-letter ISO country code associated with the beneficial
                owner's citizenship.
              type: string
            date_of_birth:
              description: Date of birth of the user.
              format: date
              type: string
            tin:
              description: SSN
              maxLength: 9
              minLength: 9
              type: string
            foreign_tax_id:
              description: The tax identification number associated with the beneficial
                owner's country of residence.
              type: string
            tax_treaty_country:
              description: The two-letter ISO country code of the country for tax
                treaty purposes.
              type: string
            tax_treaty_citation:
              description: The article and paragraph of the citation claimed for tax
                treaty purposes.
              type: string
            tax_treaty_rate:
              description: "The withholding rate claimed for tax treaty purposes.\
                \ For example, a 15% rate would be represented as 0.15."
              type: number
            tax_treaty_income_type:
              description: The type of income for tax treaty purposes. Valid values
                are - interest1 (Interest Paid by U.S. Obligors) - dividend6 (Dividends
                Paid by U.S. Corporations) - dividend7 (Dividends Qualifying for Direct
                Dividend Rate) - pension15 (Pensions and Annuities) - socialSecurity
                (Social Security) - equipment10 (Industrial Equipment) - knowhow10
                (Know-How/Other Industrial Royalties) - patent10 (Patents) - film11
                (Film & TV) - copyright12 (Copyrights)
              enum:
              - interest1
              - dividend6
              - dividend7
              - pension15
              - socialSecurity
              - equipment10
              - knowhow10
              - patent10
              - film11
              - copyright12
              type: string
            tax_treaty_explanation:
              description: An optional explanation for the tax treaty claimed.
              type: string
            address:
              description: Address of the user or their business.
              properties:
                line_1:
                  description: Address line 1.
                  type: string
                line_2:
                  description: Address line 2.
                  type: string
                city:
                  description: City.
                  type: string
                state:
                  description: State.
                  type: string
                country:
                  description: Country.
                  type: string
                postcode:
                  description: Postal code or Zip Code.
                  type: string
              required:
              - city
              - country
              - line_1
              - postcode
              - state
              type: object
            signature:
              description: Signature of the user.
              properties:
                consent:
                  description: The consent of the beneficial owner to the disclosure
                    of their information to the IRS.
                  type: boolean
                name:
                  description: The name of the person signing the form.
                  type: string
                email:
                  description: The email address of the person signing the form.
                  type: string
              required:
              - consent
              - email
              - name
              type: object
          required:
          - address
          - citizenship_country
          - date_of_birth
          - name
          - signature
          - tin
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-users-user_id-send-verification-token:
      properties:
        use_voice:
          default: false
          description: Defaults to `false` which sends token via SMS. Set `true` to
            receive via call instead.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSendVerificationTokenRequest-properties-use_voice
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-users-user_id-verify:
      properties:
        token:
          description: The token sent to the user.
          minLength: 6
          type: string
      required:
      - token
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-users-user_id-payout-methods:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--v2-users-user_id-payout-methods:
      properties:
        platform:
          description: Payout platform to add.
          enum:
          - paypal
          - venmo
          - cash_app
          - ach
          type: string
        routing_number:
          description: Bank account or Cash App routing number. Required if `platform`
            = `ach` or `cash_app`.
          type: string
        account_number:
          description: Bank account or Cash App account number. Required if `platform`
            = `ach` or `cash_app`.
          type: string
        account_type:
          description: Bank account type. Required if `platform` = `ach`.
          enum:
          - checking
          - savings
          type: string
        email:
          description: PayPal email address. Required if `platform` = `paypal`.
          type: string
        phone_number:
          description: Venmo phone number. One of `phone_number` or `handle` is required
            if `platform` = `venmo`.
          type: string
        handle:
          description: Venmo handle. One of `phone_number` or `handle` is required
            if `platform` = `venmo`.
          type: string
        cash_tag:
          description: Cash App Cash Tag. Required if `platform` = `cash_app`.
          type: string
      required:
      - platform
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-transfers:
      properties:
        limit:
          type: integer
        starting_after:
          format: uuid
          type: string
        ending_before:
          format: uuid
          type: string
        user_id:
          format: uuid
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
      - user_id
    konfig-generated-schema-single-parameter-schema-post--v2-transfers:
      properties:
        amount:
          description: The amount in cents to transfer. Negative amount transfers
            money from the `app` to the `user`.
          type: integer
        user_id:
          description: The user's id.
          format: uuid
          type: string
        tax_exempt:
          description: Transfers marked as `tax_exempt` will not be counted towards
            the 1099 threshold.
        idempotency_key:
          description: UUID that will be used to idempotently handle requests. Transfers
            with existing idempotency keys will be rejected.
          format: uuid
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - amount
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-transfers-transfer_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-flows:
      properties:
        limit:
          type: integer
        starting_after:
          format: uuid
          type: string
        ending_before:
          format: uuid
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
    konfig-generated-schema-single-parameter-schema-post--v2-flows:
      properties:
        steps:
          description: "A list of steps. Can either be a string or an object with\
            \ additional properties. Example: A `redirect` step looks like {\"name\"\
            : \"redirect\", \"redirect_url\": \"https://example.com\"}"
          items: {}
          type: array
          uniqueItems: true
        user_id:
          description: The user's id.
          format: uuid
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - steps
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-flows-flow_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-payout-links:
      properties:
        limit:
          type: integer
        starting_after:
          format: uuid
          type: string
        ending_before:
          format: uuid
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
    konfig-generated-schema-single-parameter-schema-post--v2-payout-links:
      properties:
        user_id:
          description: The user's id.
          format: uuid
          type: string
        payee:
          description: The payee. This is optional.
          properties:
            first_name:
              description: First name of the payee.
              type: string
            last_name:
              description: Last name of the payee.
              type: string
            country_code:
              description: Country code of the payee's phone number e.g. "1" for USA.
              type: string
            phone_number:
              description: Rest of the payee's phone number.
              type: string
            email:
              description: Payee's email address.
              type: string
          type: object
        amount:
          description: Amount to be paid in cents.
          type: integer
        delivery:
          properties:
            message:
              description: Message to send in the sms message that is sent to the
                payee.
              type: string
            method:
              description: "Delivery method. `sms` requires `payee.country_code` and\
                \ `payee.phone_number`, `email` required `payee.email`. `all` will\
                \ deliver to all the methods supplied in the payee object (e.g., `all`\
                \ with empty `payee` has the same effect as `link`, and `all` with\
                \ `payee.email` has the same effect as `email`)."
              enum:
              - sms
              - link
              - email
              - all
              type: string
          type: object
        force_collect_compliance_information:
          default: false
          description: Force the collection of 1099 or W-8 information. Defaults to
            `false`.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PayoutlinksCreatePayoutLinkRequest-properties-force_collect_compliance_information
        tax_exempt:
          description: Payout links marked as `tax_exempt` will not be counted towards
            the 1099 threshold.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
        memo:
          description: Add a memo to the top of the Payout Link
          type: string
        idempotency_key:
          description: "Unique UUID key that prevents duplicate requests from being\
            \ processed. If a payout link with the idempotency key exists, a new link\
            \ will not be created and the existing link will be returned instead."
          format: uuid
        payout_fee_party:
          description: Overrides the setting for which party will pay fees on this
            payout. This takes precedence over the default for your application.
          enum:
          - user
          - platform
          format: uuid
          type: string
        additional_steps:
          description: Array of steps in the flow.
          items:
            enum:
            - compliance
            - id-verification
            - background-check
            - manage-payments
            - manage-payouts
            - payout
            - redirect
            type: string
          type: array
      required:
      - amount
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--v2-payout-links-payout_link_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-payout-links-payout_link_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-payouts:
      properties:
        user_id:
          description: ID of the `user` who you are creating the payout for.
          format: uuid
          type: string
        amount:
          description: Amount in cents to payout the user.
          type: integer
        platform:
          description: "Platform that you are paying out the `user` through,"
          enum:
          - paypal
          - venmo
          - ach
          - bank_transfer
          - cash_app
          - payoneer
          - airtm
          - default
          type: string
        account_id:
          description: The bank account ID you are paying to. Required for `ach` and
            `intl_bank`.
          type: string
        fund:
          description: Creates a transfer for the amount to the user before creating
            the payout. The funds are returned if the payout does not succeed.
          type: boolean
        idempotency_key:
          description: UUID that will be used to idempotently handle requests. Transfers
            with existing idempotency keys will be rejected.
          format: uuid
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - amount
      - platform
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-payments:
      properties:
        user_id:
          format: uuid
          type: string
        customer_id:
          format: uuid
          type: string
        amount:
          type: integer
        platform:
          enum:
          - ach
          type: string
        ach_info:
          description: |
            Specifies the bank account to draw the payment from. This can be used as an alternative to a stored account ID.
          properties:
            account_number:
              pattern: "[0-9]{7,17}"
              type: string
            routing_number:
              pattern: "[0-9]{9}"
              type: string
            account_type:
              enum:
              - checking
              - savings
              type: string
          type: object
        account_id:
          description: The user's ACH account ID.
        metadata: {}
      required:
      - amount
      - platform
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-payouts-send-payout:
      properties:
        amount:
          description: The amount in cents to pay the user.
          type: integer
        user_id:
          description: The user's id. `user_id` or `payee` is required.
          format: uuid
          type: string
        payee:
          description: The payee's phone number. `user_id` or `payee` is required.
          properties:
            country_code:
              description: Country code of the payee's phone number e.g. "1" for USA.
              type: string
            phone_number:
              description: Rest of the payee's phone number.
              type: string
          required:
          - country_code
          - phone_number
          type: object
        delivery:
          properties:
            message:
              description: Message to send with the payout through sms.
              type: string
          type: object
        force_collect_compliance_information:
          default: false
          description: Collect 1099 or w8-ben information.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PayoutsSendPayoutRequest-properties-force_collect_compliance_information
        additional_steps:
          description: Array of steps in the flow.
          items:
            enum:
            - compliance
            - id-verification
            - background-check
            - manage-payments
            - manage-payouts
            - payout
            - redirect
            type: string
          type: array
        tax_exempt:
          description: Payouts marked as `tax_exempt` will not be counted towards
            the 1099 threshold.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
        memo:
          description: Add a memo to the top of the Payout Link
          type: string
        idempotency_key:
          description: "Unique UUID key that prevents duplicate requests from being\
            \ processed. If a payout link with the idempotency key exists, a new link\
            \ will not be created and the existing link will be returned instead."
          format: uuid
        payout_fee_party:
          description: Overrides the setting for which party will pay fees on this
            payout. This takes precedence over the default for your application.
          enum:
          - user
          - platform
          format: uuid
          type: string
      required:
      - amount
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-payout-requests:
      properties:
        limit:
          type: integer
        starting_after:
          format: uuid
          type: string
        ending_before:
          format: uuid
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
    konfig-generated-schema-single-parameter-schema-post--v2-payout-requests:
      properties:
        amount:
          description: The amount in cents to pay the user.
          type: integer
        user_id:
          description: The user's id. `user_id` or `payee` is required.
          format: uuid
          type: string
        payee:
          description: The payee's phone number. `user_id` or `payee` is required.
          properties:
            country_code:
              description: Country code of the payee's phone number e.g. "1" for USA.
              type: string
            phone_number:
              description: Rest of the payee's phone number.
              type: string
          required:
          - country_code
          - phone_number
          type: object
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
        memo:
          description: Add a memo to payout request
          type: string
      required:
      - amount
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-payout-requests-payout_request_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-transactions:
      properties:
        limit:
          type: integer
        starting_after:
          format: uuid
          type: string
        ending_before:
          format: uuid
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
    konfig-generated-schema-single-parameter-schema-get--v2-transactions-transaction_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-payment-intents:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-payment-intents:
      properties:
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        amount:
          description: Amount in cents
          type: integer
        currency:
          description: Currency of the payment. Currently only `usd` is supported.
          enum:
          - usd
          type: string
        confirm:
          default: false
          description: Set to `true` to attempt to confirm this payment intent immediately.
            Defaults to `false`.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaymentintentsCreateIntentRequest-properties-confirm
        user_id:
          description: ID of a Dots `user` making this payment.
          format: uuid
          type: string
        customer_id:
          description: ID of a Dots `payment_customer` making this payment.
          format: uuid
          type: string
        payment_method_id:
          description: ID of the payment method to attach to this payment intent.
          format: uuid
          type: string
        payment_method_types:
          description: Currently only `card` is supported.
          items:
            enum:
            - card
            type: string
          type: array
        setup_future_usage:
          enum:
          - on_session
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: boolean
        transfer_data:
          properties:
            destination_user_id:
              description: The destination user to send the funds to. This is `amount`
                - transactions fees - `application_fee`.
              format: uuid
              type: string
          type: object
        application_fee_amount:
          description: Amount in cents to transfer to the application's wallet as
            a platform fee.
          minimum: 0
          type: integer
      required:
      - amount
      - currency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-payment-intents-payment_intent_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-payment-intents-payment_intent_id-confirm:
      properties:
        payment_method_id:
          description: ID of the payment method to confirm the intent with.
          type: string
          x-stoplight:
            id: zi4bm7qnkmn6i
      required:
      - payment_method_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-transfer-batches:
      properties:
        limit:
          type: string
        starting_after:
          type: string
        ending_before:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
    konfig-generated-schema-single-parameter-schema-post--v2-transfer-batches:
      properties:
        items:
          items:
            properties:
              amount:
                type: integer
              user_id:
                format: uuid
                type: string
              tax_exempt:
                type: boolean
              allow_debit:
                type: boolean
              idempotency_key:
                format: uuid
                type: string
              metadata:
                type: object
            type: object
          type: array
        idempotency_key:
          format: uuid
          type: string
        metadata:
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-transfer-batches-transfer_batch_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-payment-customers:
      properties:
        limit:
          type: string
        starting_after:
          type: string
        ending_before:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
    konfig-generated-schema-single-parameter-schema-post--v2-payment-customers:
      properties:
        id:
          format: uuid
          type: string
        user_id:
          format: uuid
          type: string
        email:
          format: email
          type: string
        country_code:
          type: string
        phone_number:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        metadata:
          type: object
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-payment-customers-payment_customer_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-checkout-sessions:
      properties:
        limit:
          type: string
        starting_after:
          type: string
        ending_before:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
    konfig-generated-schema-single-parameter-schema-post--v2-checkout-sessions:
      properties:
        line_items:
          items:
            properties:
              price_data:
                properties:
                  currency:
                    enum:
                    - usd
                    type: string
                  amount:
                    description: amount in cents
                    type: integer
                  product_data:
                    properties:
                      description:
                        type: string
                      name:
                        type: string
                      images:
                        items:
                          format: uri
                          type: string
                        type: array
                      metadata:
                        type: object
                    required:
                    - name
                    type: object
                required:
                - amount
                - currency
                - product_data
                type: object
              quantity:
                type: integer
            required:
            - price_data
            - quantity
            type: object
          type: array
          uniqueItems: true
        customer_email:
          format: email
          type: string
        client_reference_id:
          type: string
        success_url:
          format: uri
          type: string
        cancel_url:
          format: uri
          type: string
        mode:
          enum:
          - payment
          type: string
        user_id:
          description: Supply a Dots user ID in place of a customer ID
          format: uuid
          type: string
        customer_id:
          format: uuid
          type: string
        expires_in:
          default: 10800
          example: 10800
          maximum: 10800
          minimum: 0
          type: integer
          x-konfig-original-example: 10800
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CheckoutsessionsCreateSessionRequest-properties-expires_in
        metadata:
          type: object
      required:
      - line_items
      - mode
      - success_url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-checkout-sessions-checkout_session_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-apps:
      properties:
        limit:
          maximum: 100
          minimum: 0
          type: integer
        starting_after:
          format: UUID
          type: string
        ending_before:
          format: UUID
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
    konfig-generated-schema-single-parameter-schema-post--v2-apps:
      properties:
        name:
          description: The name of the application.
          maxLength: 60
          minLength: 3
          type: string
          x-stoplight:
            id: yxeyh7kr44vob
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          x-stoplight:
            id: zv0zi3c333dvg
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-apps-app_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-apps-app_id-compliance:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--v2-apps-app_id-compliance:
      properties:
        company_info:
          properties:
            dba:
              description: Company DBA (Doing Business As)
              maxLength: 60
              minLength: 1
              type: string
            ein:
              description: Federal Employer Identification Number
              pattern: "[0-9]{9}"
              type: string
            incorporation_date:
              description: Date of incorporation
              format: date
              type: string
            incorporation_state:
              description: State where incorporated
              type: string
            incorporation_type:
              description: The legal classification of the company's incorporation
              enum:
              - sole_proprietorship
              - partnership
              - llc
              - c_corporation
              - s_corporation
              type: string
            name:
              description: Company's legal name
              maxLength: 100
              minLength: 3
              type: string
            website:
              description: Company web address
              maxLength: 100
              minLength: 3
              type: string
          required:
          - ein
          - incorporation_date
          - incorporation_state
          - incorporation_type
          - name
          - website
          type: object
        contact_info:
          properties:
            city:
              maxLength: 100
              minLength: 1
              type: string
            country:
              description: Country name or country code
              maxLength: 60
              minLength: 2
              type: string
            email:
              description: Primary contact email address. Service emails will be sent
                to this address.
              format: email
              maxLength: 100
              minLength: 3
              type: string
            line1:
              description: Address line 1
              maxLength: 100
              minLength: 1
              type: string
            line2:
              description: Address line 2
              maxLength: 100
              minLength: 1
              type: string
            phone_number:
              maxLength: 30
              minLength: 3
              type: string
            state:
              description: State when applicable
              maxLength: 60
              minLength: 2
              type: string
            zip:
              description: ZIP or postal code
              maxLength: 20
              minLength: 3
              type: string
          required:
          - city
          - country
          - email
          - line1
          - phone_number
          - state
          - zip
          type: object
        directors:
          items:
            properties:
              title:
                description: Employee title or ownership role
                maxLength: 60
                minLength: 3
                type: string
              address:
                properties:
                  city:
                    maxLength: 100
                    minLength: 1
                    type: string
                  country:
                    maxLength: 60
                    minLength: 2
                    type: string
                  line1:
                    maxLength: 100
                    minLength: 1
                    type: string
                  line2:
                    maxLength: 100
                    minLength: 1
                    type: string
                  state:
                    maxLength: 60
                    minLength: 1
                    type: string
                  zip:
                    maxLength: 20
                    minLength: 3
                    type: string
                required:
                - city
                - country
                - line1
                - zip
                type: object
              dob:
                description: Date of birth
                format: date
                type: string
              email:
                description: "Contact email, needs to be verifiable"
                format: email
                maxLength: 100
                minLength: 3
                type: string
              first_name:
                maxLength: 60
                minLength: 1
                type: string
              last_name:
                maxLength: 60
                minLength: 1
                type: string
              ownership_percentage:
                description: Percentage of company owned by this person
                type: number
              phone:
                maxLength: 30
                minLength: 3
                type: string
            required:
            - address
            - dob
            - email
            - first_name
            - last_name
            - ownership_percentage
            - phone
            - title
            type: object
          type: array
        flow_of_funds:
          properties:
            reasons:
              description: Flow of funds
              example: "Payments are processed via credit card, deposited to Dots,\
                \ and paid to sellers."
              maxLength: 400
              minLength: 3
              type: string
              x-examples:
              - "Payments are processed via credit card, deposited to Dots, and paid\
                \ to sellers."
              - Funds will be loaded from our bank account and paid out via Dots.
              x-konfig-original-example: "Payments are processed via credit card,\
                \ deposited to Dots, and paid to sellers."
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-business-compliance-info-properties-flow_of_funds-properties-reasons
            usage:
              description: Description of the business
              example: We are a market place for teddy bears.
              maxLength: 400
              minLength: 3
              type: string
              x-examples:
              - We are a market place for teddy bears.
              - We provide a platform for influencers to get paid for posting.
              x-konfig-original-example: We are a market place for teddy bears.
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-business-compliance-info-properties-flow_of_funds-properties-usage
          required:
          - reasons
          - usage
          type: object
      required:
      - company_info
      - contact_info
      - directors
      - flow_of_funds
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-apps-app_id-ach-account:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--v2-apps-app_id-ach-account:
      properties:
        account_number:
          description: The bank account number.
          pattern: "[0-9]{7,20}"
          type: string
          x-stoplight:
            id: il8jsqrfkjtw8
        routing_number:
          description: The bank's ABA routing number.
          pattern: "[0-9]{9}"
          type: string
          x-stoplight:
            id: pshq2c7pk7p6w
        account_type:
          description: The type of bank account.
          enum:
          - checking
          - savings
          type: string
          x-stoplight:
            id: ngkifj36w2fn2
      required:
      - account_number
      - account_type
      - routing_number
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-apps-app_id-deposit:
      properties:
        amount:
          description: The amount to deposit in cents.
          type: integer
          x-stoplight:
            id: x8ifasn0a26bk
        idempotency_key:
          description: Idempotency key in UUID format.
          format: uuid
          type: string
          x-stoplight:
            id: x3s7qvqawo1qb
      required:
      - amount
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-apps-app_id-withdraw:
      properties:
        amount:
          description: The amount to deposit in cents.
          type: integer
        idempotency_key:
          description: Idempotency key in UUID format.
          format: uuid
          type: string
      required:
      - amount
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-payment-methods:
      properties:
        customer_id:
          type: string
        limit:
          type: number
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - customer_id
      - limit
    konfig-generated-schema-single-parameter-schema-get--v2-payment-methods-payment_method_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-payment-methods-payment_method_id-attach:
      properties:
        customer_id:
          description: ID of the payment customer
          type: string
          x-stoplight:
            id: 4uj7v7zpfc96f
      required:
      - customer_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-payment-methods-payment_method_id-detach:
      properties:
        customer_id:
          description: ID of the payment customer to detach the payment method from.
          type: string
          x-stoplight:
            id: udd5vmbp33cwe
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-disputes:
      properties:
        limit:
          type: string
        starting_after:
          type: string
        ending_before:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
    konfig-generated-schema-single-parameter-schema-get--v2-disputes-dispute_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-disputes-dispute_id-evidence:
      properties:
        type:
          enum:
          - customer_communications
          - refund_policy
          - cancellation_policy
          - customer_signature
          - receipt
          - service_documentation
          - duplicate_charge_documentation
          - shipping_documentation
          - uncategorized
          type: string
          x-stoplight:
            id: duy0d05akb9c2
        content:
          type: string
          x-stoplight:
            id: eluu5effho7x5
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-disputes-dispute_id-submit:
      properties:
        description:
          type: string
          x-stoplight:
            id: u40t07qa6e0hb
      required:
      - description
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-refunds:
      properties:
        limit:
          type: string
        starting_after:
          type: string
        ending_before:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
    konfig-generated-schema-single-parameter-schema-post--v2-refunds:
      properties:
        amount:
          description: Amount in cents
          type: integer
        payment_intent_id:
          description: ID of the `payment_intent` you are refunding.
          format: uuid
          type: string
        reason:
          enum:
          - duplicate
          - fraudulent
          - requested_by_customer
          - expired_uncaptured_charge
          - partial_capture
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: boolean
      required:
      - amount
      - payment_intent_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-refunds-refund_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-organization-transfers:
      properties:
        limit:
          type: integer
        starting_after:
          format: uuid
          type: string
        ending_before:
          format: uuid
          type: string
        user_id:
          format: uuid
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - starting_after
      - ending_before
      - user_id
    konfig-generated-schema-single-parameter-schema-post--v2-organization-transfers:
      properties:
        amount:
          description: The amount in cents to transfer. Negative amount transfers
            money from the `app` to the `user`.
          type: integer
        api_app_id:
          description: API App ID to transact with.
          format: uuid
          type: string
          x-stoplight:
            id: g8a7zc7z7uoxl
        idempotency_key:
          format: uuid
          type: string
          x-stoplight:
            id: 212khhchum63l
        metadata:
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
      required:
      - amount
      - api_app_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-organization-transfers-transfer_id:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    payout_link_payee:
      description: Information about the payee. It is used to pre-fill information.
      example:
        country_code: country_code
        last_name: last_name
        phone_number: phone_number
        first_name: first_name
        email: email
      properties:
        first_name:
          description: Payee's first name.
          type: string
        last_name:
          description: Payee's last name.
          type: string
        email:
          description: Payee's email address.
          format: email
          type: string
        country_code:
          description: Country code of the payee's phone number e.g. "1" for USA.
          type: string
        phone_number:
          description: Rest of the payee's phone number.
          type: string
      type: object
    payout_link_delivery:
      example:
        country_code: country_code
        method: link
        phone_number: phone_number
        email: email
      properties:
        method:
          enum:
          - link
          - sms
          - email
          type: string
        email:
          format: email
          type: string
        country_code:
          type: string
        phone_number:
          type: string
      type: object
    payout_request_payee:
      example:
        country_code: country_code
        phone_number: phone_number
      properties:
        country_code:
          type: string
        phone_number:
          type: string
      type: object
    transfer_external_data:
      example:
        account_id: account_id
        external_id: external_id
        platform: ach
      properties:
        account_id:
          type: string
        external_id:
          type: string
        platform:
          enum:
          - ach
          - paypal
          - venmo
          - visa
          - amazon
          - cash_app
          - intl_bank
          - intl_transfer
          - bank_transfer
          - payoneer
          - airtm
          type: string
      type: object
    user_compliance:
      example:
        tax_id_collected: true
        w8_ben_collected: true
        flagged: true
        date_of_birth_collected: true
        "1099_collected": true
        must_collect_1099: true
        id_verified: true
        address_collected: true
      properties:
        tax_id_collected:
          type: boolean
        address_collected:
          type: boolean
        date_of_birth_collected:
          type: boolean
        must_collect_1099:
          type: boolean
        "1099_collected":
          type: boolean
        w8_ben_collected:
          type: boolean
        flagged:
          type: boolean
        id_verified:
          type: boolean
      type: object
    checkout_session_line_items_inner:
      example:
        quantity: 0
        price_id: price_id
      properties:
        quantity:
          type: integer
        price_id:
          type: string
      type: object
    app_metrics:
      example:
        connected_users: 0
        wallet_balance: wallet_balance
        money_out: money_out
      properties:
        wallet_balance:
          format: decimal
          type: string
        money_out:
          format: decimal
          type: string
        connected_users:
          type: integer
      required:
      - connected_users
      - money_out
      - wallet_balance
      type: object
    business_compliance_info_company_info:
      example:
        dba: dba
        website: website
        incorporation_state: incorporation_state
        name: name
        incorporation_type: sole_proprietorship
        ein: ein
        incorporation_date: 2000-01-23
      properties:
        dba:
          description: Company DBA (Doing Business As)
          maxLength: 60
          minLength: 1
          type: string
        ein:
          description: Federal Employer Identification Number
          pattern: "[0-9]{9}"
          type: string
        incorporation_date:
          description: Date of incorporation
          format: date
          type: string
        incorporation_state:
          description: State where incorporated
          type: string
        incorporation_type:
          description: The legal classification of the company's incorporation
          enum:
          - sole_proprietorship
          - partnership
          - llc
          - c_corporation
          - s_corporation
          type: string
        name:
          description: Company's legal name
          maxLength: 100
          minLength: 3
          type: string
        website:
          description: Company web address
          maxLength: 100
          minLength: 3
          type: string
      required:
      - ein
      - incorporation_date
      - incorporation_state
      - incorporation_type
      - name
      - website
      type: object
    business_compliance_info_contact_info:
      example:
        zip: zip
        country: country
        city: city
        phone_number: phone_number
        state: state
        line2: line2
        email: email
        line1: line1
      properties:
        city:
          maxLength: 100
          minLength: 1
          type: string
        country:
          description: Country name or country code
          maxLength: 60
          minLength: 2
          type: string
        email:
          description: Primary contact email address. Service emails will be sent
            to this address.
          format: email
          maxLength: 100
          minLength: 3
          type: string
        line1:
          description: Address line 1
          maxLength: 100
          minLength: 1
          type: string
        line2:
          description: Address line 2
          maxLength: 100
          minLength: 1
          type: string
        phone_number:
          maxLength: 30
          minLength: 3
          type: string
        state:
          description: State when applicable
          maxLength: 60
          minLength: 2
          type: string
        zip:
          description: ZIP or postal code
          maxLength: 20
          minLength: 3
          type: string
      required:
      - city
      - country
      - email
      - line1
      - phone_number
      - state
      - zip
      type: object
    business_compliance_info_directors_inner_address:
      example:
        zip: zip
        country: country
        city: city
        state: state
        line2: line2
        line1: line1
      properties:
        city:
          maxLength: 100
          minLength: 1
          type: string
        country:
          maxLength: 60
          minLength: 2
          type: string
        line1:
          maxLength: 100
          minLength: 1
          type: string
        line2:
          maxLength: 100
          minLength: 1
          type: string
        state:
          maxLength: 60
          minLength: 1
          type: string
        zip:
          maxLength: 20
          minLength: 3
          type: string
      required:
      - city
      - country
      - line1
      - zip
      type: object
    business_compliance_info_directors_inner:
      example:
        address:
          zip: zip
          country: country
          city: city
          state: state
          line2: line2
          line1: line1
        phone: phone
        dob: 2000-01-23
        last_name: last_name
        title: title
        first_name: first_name
        email: email
        ownership_percentage: 0.8008281904610115
      properties:
        title:
          description: Employee title or ownership role
          maxLength: 60
          minLength: 3
          type: string
        address:
          $ref: '#/components/schemas/business_compliance_info_directors_inner_address'
        dob:
          description: Date of birth
          format: date
          type: string
        email:
          description: "Contact email, needs to be verifiable"
          format: email
          maxLength: 100
          minLength: 3
          type: string
        first_name:
          maxLength: 60
          minLength: 1
          type: string
        last_name:
          maxLength: 60
          minLength: 1
          type: string
        ownership_percentage:
          description: Percentage of company owned by this person
          type: number
        phone:
          maxLength: 30
          minLength: 3
          type: string
      required:
      - address
      - dob
      - email
      - first_name
      - last_name
      - ownership_percentage
      - phone
      - title
      type: object
    business_compliance_info_flow_of_funds:
      example:
        reasons: "Payments are processed via credit card, deposited to Dots, and paid\
          \ to sellers."
        usage: We are a market place for teddy bears.
      properties:
        reasons:
          description: Flow of funds
          example: "Payments are processed via credit card, deposited to Dots, and\
            \ paid to sellers."
          maxLength: 400
          minLength: 3
          type: string
          x-examples:
          - "Payments are processed via credit card, deposited to Dots, and paid to\
            \ sellers."
          - Funds will be loaded from our bank account and paid out via Dots.
          x-konfig-original-example: "Payments are processed via credit card, deposited\
            \ to Dots, and paid to sellers."
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-business-compliance-info-properties-flow_of_funds-properties-reasons
        usage:
          description: Description of the business
          example: We are a market place for teddy bears.
          maxLength: 400
          minLength: 3
          type: string
          x-examples:
          - We are a market place for teddy bears.
          - We provide a platform for influencers to get paid for posting.
          x-konfig-original-example: We are a market place for teddy bears.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-business-compliance-info-properties-flow_of_funds-properties-usage
      required:
      - reasons
      - usage
      type: object
    UsersSubmitComplianceInfoRequest_w9_address:
      description: Address of the user or their business.
      example:
        line_1: line_1
        line_2: line_2
        country: country
        city: city
        postcode: postcode
        state: state
      properties:
        line_1:
          description: Address line 1.
          type: string
        line_2:
          description: Address Line 2
          type: string
        city:
          description: City.
          type: string
        state:
          description: State.
          type: string
        country:
          description: Country.
          type: string
        postcode:
          description: Postal code or Zip code.
          type: string
      required:
      - city
      - country
      - line_1
      - postcode
      - state
      type: object
    UsersSubmitComplianceInfoRequest_w9:
      description: W-9 equivalent for users based in the United States.
      example:
        business_name: business_name
        entity_type: individual
        address:
          line_1: line_1
          line_2: line_2
          country: country
          city: city
          postcode: postcode
          state: state
        date_of_birth: 2000-01-23
        tin: tin
        last_name: last_name
        first_name: first_name
      properties:
        entity_type:
          description: "Type of entity filling out the W-9, `business` or `individual`."
          enum:
          - individual
          - business
          type: string
        business_name:
          description: Legal bussiness name. Required if `entity_type` is `business`.
          type: string
        first_name:
          type: string
        last_name:
          type: string
        date_of_birth:
          description: Required if `entity_type` is `individual`.
          format: date
          type: string
        tin:
          description: SSN if `entity_type` is `individual`. EIN if `entity_type`
            is `business`.
          maxLength: 9
          minLength: 9
          type: string
        address:
          $ref: '#/components/schemas/UsersSubmitComplianceInfoRequest_w9_address'
      required:
      - address
      - date_of_birth
      - entity_type
      - tin
      type: object
    UsersSubmitComplianceInfoRequest_w8ben_address:
      description: Address of the user or their business.
      example:
        line_1: line_1
        line_2: line_2
        country: country
        city: city
        postcode: postcode
        state: state
      properties:
        line_1:
          description: Address line 1.
          type: string
        line_2:
          description: Address line 2.
          type: string
        city:
          description: City.
          type: string
        state:
          description: State.
          type: string
        country:
          description: Country.
          type: string
        postcode:
          description: Postal code or Zip Code.
          type: string
      required:
      - city
      - country
      - line_1
      - postcode
      - state
      type: object
    UsersSubmitComplianceInfoRequest_w8ben_signature:
      description: Signature of the user.
      example:
        name: name
        consent: true
        email: email
      properties:
        consent:
          description: The consent of the beneficial owner to the disclosure of their
            information to the IRS.
          type: boolean
        name:
          description: The name of the person signing the form.
          type: string
        email:
          description: The email address of the person signing the form.
          type: string
      required:
      - consent
      - email
      - name
      type: object
    UsersSubmitComplianceInfoRequest_w8ben:
      description: W8-BEN form for foreign payees.
      example:
        tax_treaty_income_type: interest1
        address:
          line_1: line_1
          line_2: line_2
          country: country
          city: city
          postcode: postcode
          state: state
        foreign_tax_id: foreign_tax_id
        signature:
          name: name
          consent: true
          email: email
        date_of_birth: 2000-01-23
        name: name
        tin: tin
        tax_treaty_country: tax_treaty_country
        citizenship_country: citizenship_country
        tax_treaty_rate: 0.8008281904610115
        tax_treaty_explanation: tax_treaty_explanation
        tax_treaty_citation: tax_treaty_citation
      properties:
        name:
          description: Full name of the person.
          type: string
        citizenship_country:
          description: The two-letter ISO country code associated with the beneficial
            owner's citizenship.
          type: string
        date_of_birth:
          description: Date of birth of the user.
          format: date
          type: string
        tin:
          description: SSN
          maxLength: 9
          minLength: 9
          type: string
        foreign_tax_id:
          description: The tax identification number associated with the beneficial
            owner's country of residence.
          type: string
        tax_treaty_country:
          description: The two-letter ISO country code of the country for tax treaty
            purposes.
          type: string
        tax_treaty_citation:
          description: The article and paragraph of the citation claimed for tax treaty
            purposes.
          type: string
        tax_treaty_rate:
          description: "The withholding rate claimed for tax treaty purposes. For\
            \ example, a 15% rate would be represented as 0.15."
          type: number
        tax_treaty_income_type:
          description: The type of income for tax treaty purposes. Valid values are
            - interest1 (Interest Paid by U.S. Obligors) - dividend6 (Dividends Paid
            by U.S. Corporations) - dividend7 (Dividends Qualifying for Direct Dividend
            Rate) - pension15 (Pensions and Annuities) - socialSecurity (Social Security)
            - equipment10 (Industrial Equipment) - knowhow10 (Know-How/Other Industrial
            Royalties) - patent10 (Patents) - film11 (Film & TV) - copyright12 (Copyrights)
          enum:
          - interest1
          - dividend6
          - dividend7
          - pension15
          - socialSecurity
          - equipment10
          - knowhow10
          - patent10
          - film11
          - copyright12
          type: string
        tax_treaty_explanation:
          description: An optional explanation for the tax treaty claimed.
          type: string
        address:
          $ref: '#/components/schemas/UsersSubmitComplianceInfoRequest_w8ben_address'
        signature:
          $ref: '#/components/schemas/UsersSubmitComplianceInfoRequest_w8ben_signature'
      required:
      - address
      - citizenship_country
      - date_of_birth
      - name
      - signature
      - tin
      type: object
    PayoutlinksCreatePayoutLinkRequest_payee:
      description: The payee. This is optional.
      example:
        country_code: country_code
        last_name: last_name
        phone_number: phone_number
        first_name: first_name
        email: email
      properties:
        first_name:
          description: First name of the payee.
          type: string
        last_name:
          description: Last name of the payee.
          type: string
        country_code:
          description: Country code of the payee's phone number e.g. "1" for USA.
          type: string
        phone_number:
          description: Rest of the payee's phone number.
          type: string
        email:
          description: Payee's email address.
          type: string
      type: object
    PayoutlinksCreatePayoutLinkRequest_delivery:
      example:
        method: sms
        message: message
      properties:
        message:
          description: Message to send in the sms message that is sent to the payee.
          type: string
        method:
          description: "Delivery method. `sms` requires `payee.country_code` and `payee.phone_number`,\
            \ `email` required `payee.email`. `all` will deliver to all the methods\
            \ supplied in the payee object (e.g., `all` with empty `payee` has the\
            \ same effect as `link`, and `all` with `payee.email` has the same effect\
            \ as `email`)."
          enum:
          - sms
          - link
          - email
          - all
          type: string
      type: object
    PayoutsSendPayoutRequest_payee:
      description: The payee's phone number. `user_id` or `payee` is required.
      example:
        country_code: country_code
        phone_number: phone_number
      properties:
        country_code:
          description: Country code of the payee's phone number e.g. "1" for USA.
          type: string
        phone_number:
          description: Rest of the payee's phone number.
          type: string
      required:
      - country_code
      - phone_number
      type: object
    PayoutsSendPayoutRequest_delivery:
      example:
        message: message
      properties:
        message:
          description: Message to send with the payout through sms.
          type: string
      type: object
    PaymentintentsCreateIntentRequest_transfer_data:
      example:
        destination_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destination_user_id:
          description: The destination user to send the funds to. This is `amount`
            - transactions fees - `application_fee`.
          format: uuid
          type: string
      type: object
    TransferbatchesCreateBatchRequest_items_inner:
      example:
        allow_debit: true
        amount: 0
        metadata: "{}"
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tax_exempt: true
        idempotency_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        amount:
          type: integer
        user_id:
          format: uuid
          type: string
        tax_exempt:
          type: boolean
        allow_debit:
          type: boolean
        idempotency_key:
          format: uuid
          type: string
        metadata:
          type: object
      type: object
    CheckoutsessionsCreateSessionRequest_line_items_inner_price_data_product_data:
      example:
        images:
        - https://openapi-generator.tech
        - https://openapi-generator.tech
        metadata: "{}"
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
        images:
          items:
            format: uri
            type: string
          type: array
        metadata:
          type: object
      required:
      - name
      type: object
    CheckoutsessionsCreateSessionRequest_line_items_inner_price_data:
      example:
        amount: 0
        currency: usd
        product_data:
          images:
          - https://openapi-generator.tech
          - https://openapi-generator.tech
          metadata: "{}"
          name: name
          description: description
      properties:
        currency:
          enum:
          - usd
          type: string
        amount:
          description: amount in cents
          type: integer
        product_data:
          $ref: '#/components/schemas/CheckoutsessionsCreateSessionRequest_line_items_inner_price_data_product_data'
      required:
      - amount
      - currency
      - product_data
      type: object
    CheckoutsessionsCreateSessionRequest_line_items_inner:
      example:
        price_data:
          amount: 0
          currency: usd
          product_data:
            images:
            - https://openapi-generator.tech
            - https://openapi-generator.tech
            metadata: "{}"
            name: name
            description: description
        quantity: 6
      properties:
        price_data:
          $ref: '#/components/schemas/CheckoutsessionsCreateSessionRequest_line_items_inner_price_data'
        quantity:
          type: integer
      required:
      - price_data
      - quantity
      type: object
    TransferbatchesListAllResponse_data_inner:
      example:
        metadata: "{}"
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        items:
        - allow_debit: true
          amount: 0
          metadata: "{}"
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tax_exempt: true
          transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          error: error
        - allow_debit: true
          amount: 0
          metadata: "{}"
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tax_exempt: true
          transfer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          error: error
        status: completed
      properties:
        id:
          format: uuid
          type: string
        status:
          enum:
          - completed
          - pending
          type: string
        metadata:
          type: object
        items:
          items:
            $ref: '#/components/schemas/transfer-batch-item'
          type: array
      type: object
  securitySchemes:
    api_key:
      scheme: basic
      type: http
      x-konfig-globally-required-security: true

